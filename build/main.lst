ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.read_distance,"ax",%progbits
  21              		.align	1
  22              		.global	read_distance
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	read_distance:
  28              	.LFB130:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "button.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** uint16_t read_distance(void) {
  29              		.loc 1 66 30
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  67:Core/Src/main.c ****   uint8_t timeout = 1000;
  44              		.loc 1 67 11
  45 0006 E823     		movs	r3, #232
  46 0008 FB70     		strb	r3, [r7, #3]
  68:Core/Src/main.c ****   uint8_t i = 0;
  47              		.loc 1 68 11
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 3


  48 000a 0023     		movs	r3, #0
  49 000c FB71     		strb	r3, [r7, #7]
  69:Core/Src/main.c ****   uint16_t ticks = 0;
  50              		.loc 1 69 12
  51 000e 0023     		movs	r3, #0
  52 0010 BB80     		strh	r3, [r7, #4]	@ movhi
  70:Core/Src/main.c **** 
  71:Core/Src/main.c ****   while (!HAL_GPIO_ReadPin(GPIOB, ECHO_PIN)) {
  53              		.loc 1 71 9
  54 0012 06E0     		b	.L2
  55              	.L4:
  72:Core/Src/main.c ****     i += 1;
  56              		.loc 1 72 7
  57 0014 FB79     		ldrb	r3, [r7, #7]
  58 0016 0133     		adds	r3, r3, #1
  59 0018 FB71     		strb	r3, [r7, #7]
  73:Core/Src/main.c ****     if (i >= timeout) {
  60              		.loc 1 73 8
  61 001a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  62 001c FB78     		ldrb	r3, [r7, #3]	@ zero_extendqisi2
  63 001e 9A42     		cmp	r2, r3
  64 0020 07D2     		bcs	.L9
  65              	.L2:
  71:Core/Src/main.c ****     i += 1;
  66              		.loc 1 71 11
  67 0022 4021     		movs	r1, #64
  68 0024 0E48     		ldr	r0, .L11
  69 0026 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  70 002a 0346     		mov	r3, r0
  71:Core/Src/main.c ****     i += 1;
  71              		.loc 1 71 10 discriminator 1
  72 002c 002B     		cmp	r3, #0
  73 002e F1D0     		beq	.L4
  74 0030 07E0     		b	.L5
  75              	.L9:
  74:Core/Src/main.c ****       break;
  76              		.loc 1 74 7
  77 0032 00BF     		nop
  75:Core/Src/main.c ****     }
  76:Core/Src/main.c ****   };
  77:Core/Src/main.c **** 
  78:Core/Src/main.c ****   while (HAL_GPIO_ReadPin(GPIOB, ECHO_PIN)) {
  78              		.loc 1 78 9
  79 0034 05E0     		b	.L5
  80              	.L7:
  79:Core/Src/main.c ****     ticks += 1;
  81              		.loc 1 79 11
  82 0036 BB88     		ldrh	r3, [r7, #4]	@ movhi
  83 0038 0133     		adds	r3, r3, #1
  84 003a BB80     		strh	r3, [r7, #4]	@ movhi
  80:Core/Src/main.c ****     if (ticks > 100) {
  85              		.loc 1 80 8
  86 003c BB88     		ldrh	r3, [r7, #4]
  87 003e 642B     		cmp	r3, #100
  88 0040 07D8     		bhi	.L10
  89              	.L5:
  78:Core/Src/main.c ****     ticks += 1;
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 4


  90              		.loc 1 78 10
  91 0042 4021     		movs	r1, #64
  92 0044 0648     		ldr	r0, .L11
  93 0046 FFF7FEFF 		bl	HAL_GPIO_ReadPin
  94 004a 0346     		mov	r3, r0
  78:Core/Src/main.c ****     ticks += 1;
  95              		.loc 1 78 10 is_stmt 0 discriminator 1
  96 004c 002B     		cmp	r3, #0
  97 004e F2D1     		bne	.L7
  98 0050 00E0     		b	.L6
  99              	.L10:
  81:Core/Src/main.c ****       break;
 100              		.loc 1 81 7 is_stmt 1
 101 0052 00BF     		nop
 102              	.L6:
  82:Core/Src/main.c ****     }
  83:Core/Src/main.c ****   };
  84:Core/Src/main.c **** 
  85:Core/Src/main.c ****   return 600;
 103              		.loc 1 85 10
 104 0054 4FF41673 		mov	r3, #600
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /*return ticks;*/
  88:Core/Src/main.c **** }
 105              		.loc 1 88 1
 106 0058 1846     		mov	r0, r3
 107 005a 0837     		adds	r7, r7, #8
 108              	.LCFI3:
 109              		.cfi_def_cfa_offset 8
 110 005c BD46     		mov	sp, r7
 111              	.LCFI4:
 112              		.cfi_def_cfa_register 13
 113              		@ sp needed
 114 005e 80BD     		pop	{r7, pc}
 115              	.L12:
 116              		.align	2
 117              	.L11:
 118 0060 00040240 		.word	1073873920
 119              		.cfi_endproc
 120              	.LFE130:
 122              		.global	__aeabi_i2d
 123              		.global	__aeabi_ddiv
 124              		.global	__aeabi_dmul
 125              		.global	__aeabi_dcmplt
 126              		.global	__aeabi_dcmpeq
 127              		.section	.rodata
 128              		.align	2
 129              	.LC0:
 130 0000 2000     		.short	32
 131 0002 4000     		.short	64
 132 0004 8000     		.short	128
 133              		.section	.text.main,"ax",%progbits
 134              		.align	1
 135              		.global	main
 136              		.syntax unified
 137              		.thumb
 138              		.thumb_func
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 5


 140              	main:
 141              	.LFB131:
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** 
  91:Core/Src/main.c **** 
  92:Core/Src/main.c **** int main(void)
  93:Core/Src/main.c **** {
 142              		.loc 1 93 1
 143              		.cfi_startproc
 144              		@ args = 0, pretend = 0, frame = 24
 145              		@ frame_needed = 1, uses_anonymous_args = 0
 146 0000 80B5     		push	{r7, lr}
 147              	.LCFI5:
 148              		.cfi_def_cfa_offset 8
 149              		.cfi_offset 7, -8
 150              		.cfi_offset 14, -4
 151 0002 86B0     		sub	sp, sp, #24
 152              	.LCFI6:
 153              		.cfi_def_cfa_offset 32
 154 0004 00AF     		add	r7, sp, #0
 155              	.LCFI7:
 156              		.cfi_def_cfa_register 7
  94:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c ****   uint16_t count = 0;
 157              		.loc 1 96 12
 158 0006 0023     		movs	r3, #0
 159 0008 FB82     		strh	r3, [r7, #22]	@ movhi
  97:Core/Src/main.c ****   double distance = 0.0;
 160              		.loc 1 97 10
 161 000a 4FF00002 		mov	r2, #0
 162 000e 4FF00003 		mov	r3, #0
 163 0012 C7E90223 		strd	r2, [r7, #8]
  98:Core/Src/main.c **** 
  99:Core/Src/main.c ****   uint16_t led_pins[] = {LED_0_PIN, LED_1_PIN, LED_2_PIN};
 164              		.loc 1 99 12
 165 0016 444A     		ldr	r2, .L21+24
 166 0018 3B46     		mov	r3, r7
 167 001a 92E80300 		ldm	r2, {r0, r1}
 168 001e 1860     		str	r0, [r3]
 169 0020 0433     		adds	r3, r3, #4
 170 0022 1980     		strh	r1, [r3]	@ movhi
 100:Core/Src/main.c ****   /* USER CODE END 1 */
 101:Core/Src/main.c **** 
 102:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 103:Core/Src/main.c **** 
 104:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 105:Core/Src/main.c ****   HAL_Init();
 171              		.loc 1 105 3
 172 0024 FFF7FEFF 		bl	HAL_Init
 106:Core/Src/main.c **** 
 107:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 108:Core/Src/main.c **** 
 109:Core/Src/main.c ****   /* USER CODE END Init */
 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* Configure the system clock */
 112:Core/Src/main.c ****   SystemClock_Config();
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 6


 173              		.loc 1 112 3
 174 0028 FFF7FEFF 		bl	SystemClock_Config
 113:Core/Src/main.c **** 
 114:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 115:Core/Src/main.c **** 
 116:Core/Src/main.c ****   /* USER CODE END SysInit */
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* Initialize all configured peripherals */
 119:Core/Src/main.c ****   MX_GPIO_Init();
 175              		.loc 1 119 3
 176 002c FFF7FEFF 		bl	MX_GPIO_Init
 120:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END 2 */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Infinite loop */
 125:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 126:Core/Src/main.c ****   
 127:Core/Src/main.c ****   count = 0;
 177              		.loc 1 127 9
 178 0030 0023     		movs	r3, #0
 179 0032 FB82     		strh	r3, [r7, #22]	@ movhi
 180              	.L18:
 128:Core/Src/main.c ****   
 129:Core/Src/main.c ****   while (1)
 130:Core/Src/main.c ****   {
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     if(button_release(GPIOA, BUTTON_PIN, GPIO_PIN_RESET)) {
 181              		.loc 1 132 8
 182 0034 0022     		movs	r2, #0
 183 0036 4FF40071 		mov	r1, #512
 184 003a 3C48     		ldr	r0, .L21+28
 185 003c FFF7FEFF 		bl	button_release
 186 0040 0346     		mov	r3, r0
 187              		.loc 1 132 7 discriminator 1
 188 0042 002B     		cmp	r3, #0
 189 0044 F6D0     		beq	.L18
 133:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, TRIGGER_PIN, GPIO_PIN_SET);
 190              		.loc 1 133 7
 191 0046 0122     		movs	r2, #1
 192 0048 8021     		movs	r1, #128
 193 004a 3948     		ldr	r0, .L21+32
 194 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 134:Core/Src/main.c ****       HAL_Delay(120);
 195              		.loc 1 134 7
 196 0050 7820     		movs	r0, #120
 197 0052 FFF7FEFF 		bl	HAL_Delay
 135:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, TRIGGER_PIN, GPIO_PIN_RESET);
 198              		.loc 1 135 7
 199 0056 0022     		movs	r2, #0
 200 0058 8021     		movs	r1, #128
 201 005a 3548     		ldr	r0, .L21+32
 202 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 136:Core/Src/main.c **** 
 137:Core/Src/main.c ****       count = read_distance();
 203              		.loc 1 137 15
 204 0060 FFF7FEFF 		bl	read_distance
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 7


 205 0064 0346     		mov	r3, r0
 206 0066 FB82     		strh	r3, [r7, #22]	@ movhi
 138:Core/Src/main.c ****       distance = (double) (count / PULSE_RATIO) * 340.0 * 3.6; /* Velocidade do som = 340 km/h = 34
 207              		.loc 1 138 18
 208 0068 FB8A     		ldrh	r3, [r7, #22]
 209 006a 1846     		mov	r0, r3
 210 006c FFF7FEFF 		bl	__aeabi_i2d
 211 0070 27A3     		adr	r3, .L21
 212 0072 D3E90023 		ldrd	r2, [r3]
 213 0076 FFF7FEFF 		bl	__aeabi_ddiv
 214 007a 0246     		mov	r2, r0
 215 007c 0B46     		mov	r3, r1
 216 007e 1046     		mov	r0, r2
 217 0080 1946     		mov	r1, r3
 218              		.loc 1 138 49
 219 0082 4FF00002 		mov	r2, #0
 220 0086 2B4B     		ldr	r3, .L21+36
 221 0088 FFF7FEFF 		bl	__aeabi_dmul
 222 008c 0246     		mov	r2, r0
 223 008e 0B46     		mov	r3, r1
 224 0090 1046     		mov	r0, r2
 225 0092 1946     		mov	r1, r3
 226              		.loc 1 138 16
 227 0094 20A3     		adr	r3, .L21+8
 228 0096 D3E90023 		ldrd	r2, [r3]
 229 009a FFF7FEFF 		bl	__aeabi_dmul
 230 009e 0246     		mov	r2, r0
 231 00a0 0B46     		mov	r3, r1
 232 00a2 C7E90223 		strd	r2, [r7, #8]
 139:Core/Src/main.c **** 
 140:Core/Src/main.c ****       if (distance < CLOSE_DISTANCE && distance) {
 233              		.loc 1 140 10
 234 00a6 1EA3     		adr	r3, .L21+16
 235 00a8 D3E90023 		ldrd	r2, [r3]
 236 00ac D7E90201 		ldrd	r0, [r7, #8]
 237 00b0 FFF7FEFF 		bl	__aeabi_dcmplt
 238 00b4 0346     		mov	r3, r0
 239 00b6 002B     		cmp	r3, #0
 240 00b8 1AD0     		beq	.L15
 241              		.loc 1 140 37 discriminator 1
 242 00ba 4FF00002 		mov	r2, #0
 243 00be 4FF00003 		mov	r3, #0
 244 00c2 D7E90201 		ldrd	r0, [r7, #8]
 245 00c6 FFF7FEFF 		bl	__aeabi_dcmpeq
 246 00ca 0346     		mov	r3, r0
 247 00cc 002B     		cmp	r3, #0
 248 00ce 0FD1     		bne	.L15
 141:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_0_PIN, GPIO_PIN_SET);
 249              		.loc 1 141 9
 250 00d0 0122     		movs	r2, #1
 251 00d2 2021     		movs	r1, #32
 252 00d4 1648     		ldr	r0, .L21+32
 253 00d6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 142:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_1_PIN, GPIO_PIN_SET);
 254              		.loc 1 142 9
 255 00da 0122     		movs	r2, #1
 256 00dc 4021     		movs	r1, #64
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 8


 257 00de 1448     		ldr	r0, .L21+32
 258 00e0 FFF7FEFF 		bl	HAL_GPIO_WritePin
 143:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_2_PIN, GPIO_PIN_RESET);
 259              		.loc 1 143 9
 260 00e4 0022     		movs	r2, #0
 261 00e6 8021     		movs	r1, #128
 262 00e8 1148     		ldr	r0, .L21+32
 263 00ea FFF7FEFF 		bl	HAL_GPIO_WritePin
 264 00ee 0EE0     		b	.L14
 265              	.L15:
 144:Core/Src/main.c ****       }
 145:Core/Src/main.c ****       else {
 146:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_0_PIN, GPIO_PIN_RESET);
 266              		.loc 1 146 9
 267 00f0 0022     		movs	r2, #0
 268 00f2 2021     		movs	r1, #32
 269 00f4 0E48     		ldr	r0, .L21+32
 270 00f6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 147:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_1_PIN, GPIO_PIN_RESET);
 271              		.loc 1 147 9
 272 00fa 0022     		movs	r2, #0
 273 00fc 4021     		movs	r1, #64
 274 00fe 0C48     		ldr	r0, .L21+32
 275 0100 FFF7FEFF 		bl	HAL_GPIO_WritePin
 148:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_2_PIN, GPIO_PIN_SET);
 276              		.loc 1 148 9
 277 0104 0122     		movs	r2, #1
 278 0106 8021     		movs	r1, #128
 279 0108 0948     		ldr	r0, .L21+32
 280 010a FFF7FEFF 		bl	HAL_GPIO_WritePin
 281              	.L14:
 132:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOB, TRIGGER_PIN, GPIO_PIN_SET);
 282              		.loc 1 132 7
 283 010e 91E7     		b	.L18
 284              	.L22:
 285              		.align	3
 286              	.L21:
 287 0110 00000000 		.word	0
 288 0114 006AF840 		.word	1090021888
 289 0118 CDCCCCCC 		.word	-858993459
 290 011c CCCC0C40 		.word	1074580684
 291 0120 33333333 		.word	858993459
 292 0124 3333D33F 		.word	1070805811
 293 0128 00000000 		.word	.LC0
 294 012c 00000240 		.word	1073872896
 295 0130 00040240 		.word	1073873920
 296 0134 00407540 		.word	1081425920
 297              		.cfi_endproc
 298              	.LFE131:
 300              		.section	.text.SystemClock_Config,"ax",%progbits
 301              		.align	1
 302              		.global	SystemClock_Config
 303              		.syntax unified
 304              		.thumb
 305              		.thumb_func
 307              	SystemClock_Config:
 308              	.LFB132:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 9


 149:Core/Src/main.c ****       }
 150:Core/Src/main.c ****     }
 151:Core/Src/main.c **** 
 152:Core/Src/main.c ****     /* USER CODE END WHILE */
 153:Core/Src/main.c **** 
 154:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 155:Core/Src/main.c ****   }
 156:Core/Src/main.c ****   /* USER CODE END 3 */
 157:Core/Src/main.c **** }
 158:Core/Src/main.c **** 
 159:Core/Src/main.c **** /**
 160:Core/Src/main.c ****   * @brief System Clock Configuration
 161:Core/Src/main.c ****   * @retval None
 162:Core/Src/main.c ****   */
 163:Core/Src/main.c **** void SystemClock_Config(void)
 164:Core/Src/main.c **** {
 309              		.loc 1 164 1
 310              		.cfi_startproc
 311              		@ args = 0, pretend = 0, frame = 80
 312              		@ frame_needed = 1, uses_anonymous_args = 0
 313 0000 80B5     		push	{r7, lr}
 314              	.LCFI8:
 315              		.cfi_def_cfa_offset 8
 316              		.cfi_offset 7, -8
 317              		.cfi_offset 14, -4
 318 0002 94B0     		sub	sp, sp, #80
 319              	.LCFI9:
 320              		.cfi_def_cfa_offset 88
 321 0004 00AF     		add	r7, sp, #0
 322              	.LCFI10:
 323              		.cfi_def_cfa_register 7
 165:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 324              		.loc 1 165 22
 325 0006 07F12003 		add	r3, r7, #32
 326 000a 3022     		movs	r2, #48
 327 000c 0021     		movs	r1, #0
 328 000e 1846     		mov	r0, r3
 329 0010 FFF7FEFF 		bl	memset
 166:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 330              		.loc 1 166 22
 331 0014 07F10C03 		add	r3, r7, #12
 332 0018 0022     		movs	r2, #0
 333 001a 1A60     		str	r2, [r3]
 334 001c 5A60     		str	r2, [r3, #4]
 335 001e 9A60     		str	r2, [r3, #8]
 336 0020 DA60     		str	r2, [r3, #12]
 337 0022 1A61     		str	r2, [r3, #16]
 338              	.LBB4:
 167:Core/Src/main.c **** 
 168:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 169:Core/Src/main.c ****   */
 170:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 339              		.loc 1 170 3
 340 0024 0023     		movs	r3, #0
 341 0026 BB60     		str	r3, [r7, #8]
 342 0028 274B     		ldr	r3, .L27
 343 002a 1B6C     		ldr	r3, [r3, #64]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 10


 344 002c 264A     		ldr	r2, .L27
 345 002e 43F08053 		orr	r3, r3, #268435456
 346 0032 1364     		str	r3, [r2, #64]
 347 0034 244B     		ldr	r3, .L27
 348 0036 1B6C     		ldr	r3, [r3, #64]
 349 0038 03F08053 		and	r3, r3, #268435456
 350 003c BB60     		str	r3, [r7, #8]
 351 003e BB68     		ldr	r3, [r7, #8]
 352              	.LBE4:
 353              	.LBB5:
 171:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 354              		.loc 1 171 3
 355 0040 0023     		movs	r3, #0
 356 0042 7B60     		str	r3, [r7, #4]
 357 0044 214B     		ldr	r3, .L27+4
 358 0046 1B68     		ldr	r3, [r3]
 359 0048 204A     		ldr	r2, .L27+4
 360 004a 43F44043 		orr	r3, r3, #49152
 361 004e 1360     		str	r3, [r2]
 362 0050 1E4B     		ldr	r3, .L27+4
 363 0052 1B68     		ldr	r3, [r3]
 364 0054 03F44043 		and	r3, r3, #49152
 365 0058 7B60     		str	r3, [r7, #4]
 366 005a 7B68     		ldr	r3, [r7, #4]
 367              	.LBE5:
 172:Core/Src/main.c **** 
 173:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 174:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 368              		.loc 1 176 36
 369 005c 0123     		movs	r3, #1
 370 005e 3B62     		str	r3, [r7, #32]
 177:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 371              		.loc 1 177 30
 372 0060 4FF48033 		mov	r3, #65536
 373 0064 7B62     		str	r3, [r7, #36]
 178:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 374              		.loc 1 178 34
 375 0066 0223     		movs	r3, #2
 376 0068 BB63     		str	r3, [r7, #56]
 179:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 377              		.loc 1 179 35
 378 006a 4FF48003 		mov	r3, #4194304
 379 006e FB63     		str	r3, [r7, #60]
 180:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 380              		.loc 1 180 30
 381 0070 1923     		movs	r3, #25
 382 0072 3B64     		str	r3, [r7, #64]
 181:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 383              		.loc 1 181 30
 384 0074 C023     		movs	r3, #192
 385 0076 7B64     		str	r3, [r7, #68]
 182:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 386              		.loc 1 182 30
 387 0078 0223     		movs	r3, #2
 388 007a BB64     		str	r3, [r7, #72]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 11


 183:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 389              		.loc 1 183 30
 390 007c 0423     		movs	r3, #4
 391 007e FB64     		str	r3, [r7, #76]
 184:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 392              		.loc 1 184 7
 393 0080 07F12003 		add	r3, r7, #32
 394 0084 1846     		mov	r0, r3
 395 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 396 008a 0346     		mov	r3, r0
 397              		.loc 1 184 6 discriminator 1
 398 008c 002B     		cmp	r3, #0
 399 008e 01D0     		beq	.L24
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 400              		.loc 1 186 5
 401 0090 FFF7FEFF 		bl	Error_Handler
 402              	.L24:
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** 
 189:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 190:Core/Src/main.c ****   */
 191:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 403              		.loc 1 191 31
 404 0094 0F23     		movs	r3, #15
 405 0096 FB60     		str	r3, [r7, #12]
 192:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 193:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 406              		.loc 1 193 34
 407 0098 0223     		movs	r3, #2
 408 009a 3B61     		str	r3, [r7, #16]
 194:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 409              		.loc 1 194 35
 410 009c 0023     		movs	r3, #0
 411 009e 7B61     		str	r3, [r7, #20]
 195:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 412              		.loc 1 195 36
 413 00a0 4FF48053 		mov	r3, #4096
 414 00a4 BB61     		str	r3, [r7, #24]
 196:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 415              		.loc 1 196 36
 416 00a6 0023     		movs	r3, #0
 417 00a8 FB61     		str	r3, [r7, #28]
 197:Core/Src/main.c **** 
 198:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 418              		.loc 1 198 7
 419 00aa 07F10C03 		add	r3, r7, #12
 420 00ae 0321     		movs	r1, #3
 421 00b0 1846     		mov	r0, r3
 422 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 423 00b6 0346     		mov	r3, r0
 424              		.loc 1 198 6 discriminator 1
 425 00b8 002B     		cmp	r3, #0
 426 00ba 01D0     		beq	.L26
 199:Core/Src/main.c ****   {
 200:Core/Src/main.c ****     Error_Handler();
 427              		.loc 1 200 5
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 12


 428 00bc FFF7FEFF 		bl	Error_Handler
 429              	.L26:
 201:Core/Src/main.c ****   }
 202:Core/Src/main.c **** }
 430              		.loc 1 202 1
 431 00c0 00BF     		nop
 432 00c2 5037     		adds	r7, r7, #80
 433              	.LCFI11:
 434              		.cfi_def_cfa_offset 8
 435 00c4 BD46     		mov	sp, r7
 436              	.LCFI12:
 437              		.cfi_def_cfa_register 13
 438              		@ sp needed
 439 00c6 80BD     		pop	{r7, pc}
 440              	.L28:
 441              		.align	2
 442              	.L27:
 443 00c8 00380240 		.word	1073887232
 444 00cc 00700040 		.word	1073770496
 445              		.cfi_endproc
 446              	.LFE132:
 448              		.section	.text.MX_GPIO_Init,"ax",%progbits
 449              		.align	1
 450              		.syntax unified
 451              		.thumb
 452              		.thumb_func
 454              	MX_GPIO_Init:
 455              	.LFB133:
 203:Core/Src/main.c **** 
 204:Core/Src/main.c **** /**
 205:Core/Src/main.c ****   * @brief GPIO Initialization Function
 206:Core/Src/main.c ****   * @param None
 207:Core/Src/main.c ****   * @retval None
 208:Core/Src/main.c ****   */
 209:Core/Src/main.c **** static void MX_GPIO_Init(void)
 210:Core/Src/main.c **** {
 456              		.loc 1 210 1
 457              		.cfi_startproc
 458              		@ args = 0, pretend = 0, frame = 120
 459              		@ frame_needed = 1, uses_anonymous_args = 0
 460 0000 80B5     		push	{r7, lr}
 461              	.LCFI13:
 462              		.cfi_def_cfa_offset 8
 463              		.cfi_offset 7, -8
 464              		.cfi_offset 14, -4
 465 0002 9EB0     		sub	sp, sp, #120
 466              	.LCFI14:
 467              		.cfi_def_cfa_offset 128
 468 0004 00AF     		add	r7, sp, #0
 469              	.LCFI15:
 470              		.cfi_def_cfa_register 7
 211:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 471              		.loc 1 211 20
 472 0006 07F16403 		add	r3, r7, #100
 473 000a 0022     		movs	r2, #0
 474 000c 1A60     		str	r2, [r3]
 475 000e 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 13


 476 0010 9A60     		str	r2, [r3, #8]
 477 0012 DA60     		str	r2, [r3, #12]
 478 0014 1A61     		str	r2, [r3, #16]
 212:Core/Src/main.c **** 
 213:Core/Src/main.c ****   GPIO_InitTypeDef LED_InitStruct = {0};
 479              		.loc 1 213 20
 480 0016 07F15003 		add	r3, r7, #80
 481 001a 0022     		movs	r2, #0
 482 001c 1A60     		str	r2, [r3]
 483 001e 5A60     		str	r2, [r3, #4]
 484 0020 9A60     		str	r2, [r3, #8]
 485 0022 DA60     		str	r2, [r3, #12]
 486 0024 1A61     		str	r2, [r3, #16]
 487              	.LBB6:
 214:Core/Src/main.c **** 
 215:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 216:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 488              		.loc 1 216 3
 489 0026 0023     		movs	r3, #0
 490 0028 3B61     		str	r3, [r7, #16]
 491 002a 564B     		ldr	r3, .L30
 492 002c 1B6B     		ldr	r3, [r3, #48]
 493 002e 554A     		ldr	r2, .L30
 494 0030 43F00403 		orr	r3, r3, #4
 495 0034 1363     		str	r3, [r2, #48]
 496 0036 534B     		ldr	r3, .L30
 497 0038 1B6B     		ldr	r3, [r3, #48]
 498 003a 03F00403 		and	r3, r3, #4
 499 003e 3B61     		str	r3, [r7, #16]
 500 0040 3B69     		ldr	r3, [r7, #16]
 501              	.LBE6:
 502              	.LBB7:
 217:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE(); /* Essa linha */
 503              		.loc 1 217 3
 504 0042 0023     		movs	r3, #0
 505 0044 FB60     		str	r3, [r7, #12]
 506 0046 4F4B     		ldr	r3, .L30
 507 0048 1B6B     		ldr	r3, [r3, #48]
 508 004a 4E4A     		ldr	r2, .L30
 509 004c 43F00203 		orr	r3, r3, #2
 510 0050 1363     		str	r3, [r2, #48]
 511 0052 4C4B     		ldr	r3, .L30
 512 0054 1B6B     		ldr	r3, [r3, #48]
 513 0056 03F00203 		and	r3, r3, #2
 514 005a FB60     		str	r3, [r7, #12]
 515 005c FB68     		ldr	r3, [r7, #12]
 516              	.LBE7:
 517              	.LBB8:
 218:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 518              		.loc 1 218 3
 519 005e 0023     		movs	r3, #0
 520 0060 BB60     		str	r3, [r7, #8]
 521 0062 484B     		ldr	r3, .L30
 522 0064 1B6B     		ldr	r3, [r3, #48]
 523 0066 474A     		ldr	r2, .L30
 524 0068 43F08003 		orr	r3, r3, #128
 525 006c 1363     		str	r3, [r2, #48]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 14


 526 006e 454B     		ldr	r3, .L30
 527 0070 1B6B     		ldr	r3, [r3, #48]
 528 0072 03F08003 		and	r3, r3, #128
 529 0076 BB60     		str	r3, [r7, #8]
 530 0078 BB68     		ldr	r3, [r7, #8]
 531              	.LBE8:
 532              	.LBB9:
 219:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 533              		.loc 1 219 3
 534 007a 0023     		movs	r3, #0
 535 007c 7B60     		str	r3, [r7, #4]
 536 007e 414B     		ldr	r3, .L30
 537 0080 1B6B     		ldr	r3, [r3, #48]
 538 0082 404A     		ldr	r2, .L30
 539 0084 43F00103 		orr	r3, r3, #1
 540 0088 1363     		str	r3, [r2, #48]
 541 008a 3E4B     		ldr	r3, .L30
 542 008c 1B6B     		ldr	r3, [r3, #48]
 543 008e 03F00103 		and	r3, r3, #1
 544 0092 7B60     		str	r3, [r7, #4]
 545 0094 7B68     		ldr	r3, [r7, #4]
 546              	.LBE9:
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 222:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 547              		.loc 1 222 3
 548 0096 0022     		movs	r2, #0
 549 0098 4FF40051 		mov	r1, #8192
 550 009c 3A48     		ldr	r0, .L30+4
 551 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 223:Core/Src/main.c **** 
 224:Core/Src/main.c ****   /*HAL_GPIO_WritePin(LED_PIN_GPIO_Port, LED_0_PIN | LED_1_PIN | LED_2_PIN | LED_3_PIN | LED_4_PIN,
 225:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_All, GPIO_PIN_RESET);
 552              		.loc 1 225 3
 553 00a2 0022     		movs	r2, #0
 554 00a4 4FF6FF71 		movw	r1, #65535
 555 00a8 3848     		ldr	r0, .L30+8
 556 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 226:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_All, GPIO_PIN_RESET);
 557              		.loc 1 226 3
 558 00ae 0022     		movs	r2, #0
 559 00b0 4FF6FF71 		movw	r1, #65535
 560 00b4 3648     		ldr	r0, .L30+12
 561 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 227:Core/Src/main.c ****   
 228:Core/Src/main.c ****   LED_InitStruct.Pin = LED_0_PIN | LED_1_PIN | LED_2_PIN;
 562              		.loc 1 228 22
 563 00ba E023     		movs	r3, #224
 564 00bc 3B65     		str	r3, [r7, #80]
 229:Core/Src/main.c ****   LED_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 565              		.loc 1 229 23
 566 00be 0123     		movs	r3, #1
 567 00c0 7B65     		str	r3, [r7, #84]
 230:Core/Src/main.c ****   LED_InitStruct.Pull = GPIO_NOPULL;
 568              		.loc 1 230 23
 569 00c2 0023     		movs	r3, #0
 570 00c4 BB65     		str	r3, [r7, #88]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 15


 231:Core/Src/main.c ****   LED_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 571              		.loc 1 231 24
 572 00c6 0023     		movs	r3, #0
 573 00c8 FB65     		str	r3, [r7, #92]
 232:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &LED_InitStruct);
 574              		.loc 1 232 3
 575 00ca 07F15003 		add	r3, r7, #80
 576 00ce 1946     		mov	r1, r3
 577 00d0 2E48     		ldr	r0, .L30+8
 578 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 235:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 579              		.loc 1 235 23
 580 00d6 4FF40053 		mov	r3, #8192
 581 00da 7B66     		str	r3, [r7, #100]
 236:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 582              		.loc 1 236 24
 583 00dc 0123     		movs	r3, #1
 584 00de BB66     		str	r3, [r7, #104]
 237:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 585              		.loc 1 237 24
 586 00e0 0023     		movs	r3, #0
 587 00e2 FB66     		str	r3, [r7, #108]
 238:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 588              		.loc 1 238 25
 589 00e4 0023     		movs	r3, #0
 590 00e6 3B67     		str	r3, [r7, #112]
 239:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 591              		.loc 1 239 3
 592 00e8 07F16403 		add	r3, r7, #100
 593 00ec 1946     		mov	r1, r3
 594 00ee 2648     		ldr	r0, .L30+4
 595 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 240:Core/Src/main.c **** 
 241:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_Button_Pin_Init_Struct = {0};
 596              		.loc 1 241 20
 597 00f4 07F13C03 		add	r3, r7, #60
 598 00f8 0022     		movs	r2, #0
 599 00fa 1A60     		str	r2, [r3]
 600 00fc 5A60     		str	r2, [r3, #4]
 601 00fe 9A60     		str	r2, [r3, #8]
 602 0100 DA60     		str	r2, [r3, #12]
 603 0102 1A61     		str	r2, [r3, #16]
 242:Core/Src/main.c **** 
 243:Core/Src/main.c ****   GPIO_Button_Pin_Init_Struct.Pin = BUTTON_PIN;
 604              		.loc 1 243 35
 605 0104 4FF40073 		mov	r3, #512
 606 0108 FB63     		str	r3, [r7, #60]
 244:Core/Src/main.c ****   GPIO_Button_Pin_Init_Struct.Mode = GPIO_MODE_INPUT;
 607              		.loc 1 244 36
 608 010a 0023     		movs	r3, #0
 609 010c 3B64     		str	r3, [r7, #64]
 245:Core/Src/main.c ****   GPIO_Button_Pin_Init_Struct.Pull = GPIO_NOPULL;
 610              		.loc 1 245 36
 611 010e 0023     		movs	r3, #0
 612 0110 7B64     		str	r3, [r7, #68]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 16


 246:Core/Src/main.c ****   GPIO_Button_Pin_Init_Struct.Speed = GPIO_SPEED_FREQ_LOW;
 613              		.loc 1 246 37
 614 0112 0023     		movs	r3, #0
 615 0114 BB64     		str	r3, [r7, #72]
 247:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_Button_Pin_Init_Struct);
 616              		.loc 1 247 3
 617 0116 07F13C03 		add	r3, r7, #60
 618 011a 1946     		mov	r1, r3
 619 011c 1C48     		ldr	r0, .L30+12
 620 011e FFF7FEFF 		bl	HAL_GPIO_Init
 248:Core/Src/main.c **** 
 249:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_Trigger_Pin_Init_Struct = {0};
 621              		.loc 1 249 20
 622 0122 07F12803 		add	r3, r7, #40
 623 0126 0022     		movs	r2, #0
 624 0128 1A60     		str	r2, [r3]
 625 012a 5A60     		str	r2, [r3, #4]
 626 012c 9A60     		str	r2, [r3, #8]
 627 012e DA60     		str	r2, [r3, #12]
 628 0130 1A61     		str	r2, [r3, #16]
 250:Core/Src/main.c **** 
 251:Core/Src/main.c ****   GPIO_Trigger_Pin_Init_Struct.Pin = TRIGGER_PIN;
 629              		.loc 1 251 36
 630 0132 8023     		movs	r3, #128
 631 0134 BB62     		str	r3, [r7, #40]
 252:Core/Src/main.c ****   GPIO_Trigger_Pin_Init_Struct.Mode = GPIO_MODE_OUTPUT_PP;
 632              		.loc 1 252 37
 633 0136 0123     		movs	r3, #1
 634 0138 FB62     		str	r3, [r7, #44]
 253:Core/Src/main.c ****   GPIO_Trigger_Pin_Init_Struct.Pull = GPIO_NOPULL;
 635              		.loc 1 253 37
 636 013a 0023     		movs	r3, #0
 637 013c 3B63     		str	r3, [r7, #48]
 254:Core/Src/main.c ****   GPIO_Trigger_Pin_Init_Struct.Speed = GPIO_SPEED_FREQ_LOW;
 638              		.loc 1 254 38
 639 013e 0023     		movs	r3, #0
 640 0140 7B63     		str	r3, [r7, #52]
 255:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_Trigger_Pin_Init_Struct);
 641              		.loc 1 255 3
 642 0142 07F12803 		add	r3, r7, #40
 643 0146 1946     		mov	r1, r3
 644 0148 1148     		ldr	r0, .L30+12
 645 014a FFF7FEFF 		bl	HAL_GPIO_Init
 256:Core/Src/main.c **** 
 257:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_Echo_Pin_Init_Struct = {0};
 646              		.loc 1 257 20
 647 014e 07F11403 		add	r3, r7, #20
 648 0152 0022     		movs	r2, #0
 649 0154 1A60     		str	r2, [r3]
 650 0156 5A60     		str	r2, [r3, #4]
 651 0158 9A60     		str	r2, [r3, #8]
 652 015a DA60     		str	r2, [r3, #12]
 653 015c 1A61     		str	r2, [r3, #16]
 258:Core/Src/main.c **** 
 259:Core/Src/main.c ****   GPIO_Echo_Pin_Init_Struct.Pin = ECHO_PIN;
 654              		.loc 1 259 33
 655 015e 4023     		movs	r3, #64
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 17


 656 0160 7B61     		str	r3, [r7, #20]
 260:Core/Src/main.c ****   GPIO_Echo_Pin_Init_Struct.Mode = GPIO_MODE_OUTPUT_PP;
 657              		.loc 1 260 34
 658 0162 0123     		movs	r3, #1
 659 0164 BB61     		str	r3, [r7, #24]
 261:Core/Src/main.c ****   GPIO_Echo_Pin_Init_Struct.Pull = GPIO_NOPULL;
 660              		.loc 1 261 34
 661 0166 0023     		movs	r3, #0
 662 0168 FB61     		str	r3, [r7, #28]
 262:Core/Src/main.c ****   GPIO_Echo_Pin_Init_Struct.Speed = GPIO_SPEED_FREQ_HIGH;
 663              		.loc 1 262 35
 664 016a 0223     		movs	r3, #2
 665 016c 3B62     		str	r3, [r7, #32]
 263:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_Echo_Pin_Init_Struct);
 666              		.loc 1 263 3
 667 016e 07F11403 		add	r3, r7, #20
 668 0172 1946     		mov	r1, r3
 669 0174 0648     		ldr	r0, .L30+12
 670 0176 FFF7FEFF 		bl	HAL_GPIO_Init
 264:Core/Src/main.c **** 
 265:Core/Src/main.c **** }
 671              		.loc 1 265 1
 672 017a 00BF     		nop
 673 017c 7837     		adds	r7, r7, #120
 674              	.LCFI16:
 675              		.cfi_def_cfa_offset 8
 676 017e BD46     		mov	sp, r7
 677              	.LCFI17:
 678              		.cfi_def_cfa_register 13
 679              		@ sp needed
 680 0180 80BD     		pop	{r7, pc}
 681              	.L31:
 682 0182 00BF     		.align	2
 683              	.L30:
 684 0184 00380240 		.word	1073887232
 685 0188 00080240 		.word	1073874944
 686 018c 00040240 		.word	1073873920
 687 0190 00000240 		.word	1073872896
 688              		.cfi_endproc
 689              	.LFE133:
 691              		.section	.text.Error_Handler,"ax",%progbits
 692              		.align	1
 693              		.global	Error_Handler
 694              		.syntax unified
 695              		.thumb
 696              		.thumb_func
 698              	Error_Handler:
 699              	.LFB134:
 266:Core/Src/main.c **** 
 267:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 268:Core/Src/main.c **** 
 269:Core/Src/main.c **** /* USER CODE END 4 */
 270:Core/Src/main.c **** 
 271:Core/Src/main.c **** /**
 272:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 273:Core/Src/main.c ****   * @retval None
 274:Core/Src/main.c ****   */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 18


 275:Core/Src/main.c **** void Error_Handler(void)
 276:Core/Src/main.c **** {
 700              		.loc 1 276 1
 701              		.cfi_startproc
 702              		@ args = 0, pretend = 0, frame = 0
 703              		@ frame_needed = 1, uses_anonymous_args = 0
 704              		@ link register save eliminated.
 705 0000 80B4     		push	{r7}
 706              	.LCFI18:
 707              		.cfi_def_cfa_offset 4
 708              		.cfi_offset 7, -4
 709 0002 00AF     		add	r7, sp, #0
 710              	.LCFI19:
 711              		.cfi_def_cfa_register 7
 712              	.LBB10:
 713              	.LBB11:
 714              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 19


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 20


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 715              		.loc 2 142 3
 716              		.syntax unified
 717              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 718 0004 72B6     		cpsid i
 719              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 720              		.loc 2 143 1
 721              		.thumb
 722              		.syntax unified
 723 0006 00BF     		nop
 724              	.L33:
 725              	.LBE11:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 21


 726              	.LBE10:
 277:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 278:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 279:Core/Src/main.c ****   __disable_irq();
 280:Core/Src/main.c ****   while (1)
 727              		.loc 1 280 9
 728 0008 00BF     		nop
 729 000a FDE7     		b	.L33
 730              		.cfi_endproc
 731              	.LFE134:
 733              		.text
 734              	.Letext0:
 735              		.file 3 "C:/tools/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include/m
 736              		.file 4 "C:/tools/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include/s
 737              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 738              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 739              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 740              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 741              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 742              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 743              		.file 11 "Core/Inc/button.h"
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:21     .text.read_distance:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:27     .text.read_distance:00000000 read_distance
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:118    .text.read_distance:00000060 $d
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:128    .rodata:00000000 $d
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:134    .text.main:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:140    .text.main:00000000 main
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:307    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:454    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:287    .text.main:00000110 $d
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:301    .text.SystemClock_Config:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:698    .text.Error_Handler:00000000 Error_Handler
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:443    .text.SystemClock_Config:000000c8 $d
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:449    .text.MX_GPIO_Init:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:684    .text.MX_GPIO_Init:00000184 $d
C:\Users\DAELT-~1\AppData\Local\Temp\cckBBnUw.s:692    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_GPIO_ReadPin
__aeabi_i2d
__aeabi_ddiv
__aeabi_dmul
__aeabi_dcmplt
__aeabi_dcmpeq
HAL_Init
button_release
HAL_GPIO_WritePin
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_Init
