ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.file 1 "Core/Src/main.c"
  20              		.section	.text.read_distance,"ax",%progbits
  21              		.align	1
  22              		.global	read_distance
  23              		.syntax unified
  24              		.thumb
  25              		.thumb_func
  27              	read_distance:
  28              	.LFB130:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "button.h"
  22:Core/Src/main.c **** 
  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 2


  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** 
  65:Core/Src/main.c **** 
  66:Core/Src/main.c **** uint16_t read_distance(void) {
  29              		.loc 1 66 30
  30              		.cfi_startproc
  31              		@ args = 0, pretend = 0, frame = 8
  32              		@ frame_needed = 1, uses_anonymous_args = 0
  33 0000 80B5     		push	{r7, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 7, -8
  37              		.cfi_offset 14, -4
  38 0002 82B0     		sub	sp, sp, #8
  39              	.LCFI1:
  40              		.cfi_def_cfa_offset 16
  41 0004 00AF     		add	r7, sp, #0
  42              	.LCFI2:
  43              		.cfi_def_cfa_register 7
  67:Core/Src/main.c ****   uint16_t ticks = 0;
  44              		.loc 1 67 12
  45 0006 0023     		movs	r3, #0
  46 0008 FB80     		strh	r3, [r7, #6]	@ movhi
  68:Core/Src/main.c ****   uint8_t i = 0;
  47              		.loc 1 68 11
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 3


  48 000a 0023     		movs	r3, #0
  49 000c 7B71     		strb	r3, [r7, #5]
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, TRIGGER_PIN, GPIO_PIN_SET);
  50              		.loc 1 70 3
  51 000e 0122     		movs	r2, #1
  52 0010 8021     		movs	r1, #128
  53 0012 1748     		ldr	r0, .L9
  54 0014 FFF7FEFF 		bl	HAL_GPIO_WritePin
  71:Core/Src/main.c ****   HAL_Delay(50);
  55              		.loc 1 71 3
  56 0018 3220     		movs	r0, #50
  57 001a FFF7FEFF 		bl	HAL_Delay
  72:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, TRIGGER_PIN, GPIO_PIN_RESET);
  58              		.loc 1 72 3
  59 001e 0022     		movs	r2, #0
  60 0020 8021     		movs	r1, #128
  61 0022 1348     		ldr	r0, .L9
  62 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
  73:Core/Src/main.c **** 
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   while (button(GPIOA, ECHO_PIN, GPIO_PIN_RESET)) {
  63              		.loc 1 75 9
  64 0028 02E0     		b	.L2
  65              	.L3:
  76:Core/Src/main.c ****     i += 1;
  66              		.loc 1 76 7
  67 002a 7B79     		ldrb	r3, [r7, #5]
  68 002c 0133     		adds	r3, r3, #1
  69 002e 7B71     		strb	r3, [r7, #5]
  70              	.L2:
  75:Core/Src/main.c ****     i += 1;
  71              		.loc 1 75 10
  72 0030 0022     		movs	r2, #0
  73 0032 4021     		movs	r1, #64
  74 0034 0E48     		ldr	r0, .L9
  75 0036 FFF7FEFF 		bl	button
  76 003a 0346     		mov	r3, r0
  75:Core/Src/main.c ****     i += 1;
  77              		.loc 1 75 10 is_stmt 0 discriminator 1
  78 003c 002B     		cmp	r3, #0
  79 003e F4D1     		bne	.L3
  77:Core/Src/main.c ****     if (i>10000) {
  78:Core/Src/main.c ****       break;
  79:Core/Src/main.c ****     }
  80:Core/Src/main.c ****   }
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   while (button(GPIOA, ECHO_PIN, GPIO_PIN_SET)) {
  80              		.loc 1 82 9 is_stmt 1
  81 0040 07E0     		b	.L4
  82              	.L6:
  83:Core/Src/main.c ****     ticks += 1;
  83              		.loc 1 83 11
  84 0042 FB88     		ldrh	r3, [r7, #6]	@ movhi
  85 0044 0133     		adds	r3, r3, #1
  86 0046 FB80     		strh	r3, [r7, #6]	@ movhi
  84:Core/Src/main.c ****     if (ticks>10000){
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 4


  87              		.loc 1 84 8
  88 0048 FB88     		ldrh	r3, [r7, #6]
  89 004a 42F21072 		movw	r2, #10000
  90 004e 9342     		cmp	r3, r2
  91 0050 08D8     		bhi	.L8
  92              	.L4:
  82:Core/Src/main.c ****     ticks += 1;
  93              		.loc 1 82 10
  94 0052 0122     		movs	r2, #1
  95 0054 4021     		movs	r1, #64
  96 0056 0648     		ldr	r0, .L9
  97 0058 FFF7FEFF 		bl	button
  98 005c 0346     		mov	r3, r0
  82:Core/Src/main.c ****     ticks += 1;
  99              		.loc 1 82 10 is_stmt 0 discriminator 1
 100 005e 002B     		cmp	r3, #0
 101 0060 EFD1     		bne	.L6
 102 0062 00E0     		b	.L5
 103              	.L8:
  85:Core/Src/main.c ****       break;
 104              		.loc 1 85 7 is_stmt 1
 105 0064 00BF     		nop
 106              	.L5:
  86:Core/Src/main.c ****     }
  87:Core/Src/main.c ****   };
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   return ticks;
 107              		.loc 1 89 10
 108 0066 FB88     		ldrh	r3, [r7, #6]
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /*return ticks;*/
  92:Core/Src/main.c **** }
 109              		.loc 1 92 1
 110 0068 1846     		mov	r0, r3
 111 006a 0837     		adds	r7, r7, #8
 112              	.LCFI3:
 113              		.cfi_def_cfa_offset 8
 114 006c BD46     		mov	sp, r7
 115              	.LCFI4:
 116              		.cfi_def_cfa_register 13
 117              		@ sp needed
 118 006e 80BD     		pop	{r7, pc}
 119              	.L10:
 120              		.align	2
 121              	.L9:
 122 0070 00000240 		.word	1073872896
 123              		.cfi_endproc
 124              	.LFE130:
 126              		.global	__aeabi_i2d
 127              		.global	__aeabi_ddiv
 128              		.global	__aeabi_dcmplt
 129              		.global	__aeabi_dcmpeq
 130              		.section	.rodata
 131              		.align	2
 132              	.LC0:
 133 0000 2000     		.short	32
 134 0002 4000     		.short	64
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 5


 135 0004 8000     		.short	128
 136              		.section	.text.main,"ax",%progbits
 137              		.align	1
 138              		.global	main
 139              		.syntax unified
 140              		.thumb
 141              		.thumb_func
 143              	main:
 144              	.LFB131:
  93:Core/Src/main.c **** 
  94:Core/Src/main.c **** 
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** int main(void)
  97:Core/Src/main.c **** {
 145              		.loc 1 97 1
 146              		.cfi_startproc
 147              		@ args = 0, pretend = 0, frame = 24
 148              		@ frame_needed = 1, uses_anonymous_args = 0
 149 0000 80B5     		push	{r7, lr}
 150              	.LCFI5:
 151              		.cfi_def_cfa_offset 8
 152              		.cfi_offset 7, -8
 153              		.cfi_offset 14, -4
 154 0002 86B0     		sub	sp, sp, #24
 155              	.LCFI6:
 156              		.cfi_def_cfa_offset 32
 157 0004 00AF     		add	r7, sp, #0
 158              	.LCFI7:
 159              		.cfi_def_cfa_register 7
  98:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  99:Core/Src/main.c **** 
 100:Core/Src/main.c ****   uint16_t count = 0;
 160              		.loc 1 100 12
 161 0006 0023     		movs	r3, #0
 162 0008 FB82     		strh	r3, [r7, #22]	@ movhi
 101:Core/Src/main.c ****   double distance = 0.0;
 163              		.loc 1 101 10
 164 000a 4FF00002 		mov	r2, #0
 165 000e 4FF00003 		mov	r3, #0
 166 0012 C7E90223 		strd	r2, [r7, #8]
 102:Core/Src/main.c **** 
 103:Core/Src/main.c ****   uint16_t led_pins[] = {LED_0_PIN, LED_1_PIN, LED_2_PIN};
 167              		.loc 1 103 12
 168 0016 384A     		ldr	r2, .L20
 169 0018 3B46     		mov	r3, r7
 170 001a 92E80300 		ldm	r2, {r0, r1}
 171 001e 1860     		str	r0, [r3]
 172 0020 0433     		adds	r3, r3, #4
 173 0022 1980     		strh	r1, [r3]	@ movhi
 104:Core/Src/main.c ****   /* USER CODE END 1 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 109:Core/Src/main.c ****   HAL_Init();
 174              		.loc 1 109 3
 175 0024 FFF7FEFF 		bl	HAL_Init
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 6


 110:Core/Src/main.c **** 
 111:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE END Init */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* Configure the system clock */
 116:Core/Src/main.c ****   SystemClock_Config();
 176              		.loc 1 116 3
 177 0028 FFF7FEFF 		bl	SystemClock_Config
 117:Core/Src/main.c **** 
 118:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE END SysInit */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* Initialize all configured peripherals */
 123:Core/Src/main.c ****   MX_GPIO_Init();
 178              		.loc 1 123 3
 179 002c FFF7FEFF 		bl	MX_GPIO_Init
 124:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 125:Core/Src/main.c **** 
 126:Core/Src/main.c ****   /* USER CODE END 2 */
 127:Core/Src/main.c **** 
 128:Core/Src/main.c ****   /* Infinite loop */
 129:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 130:Core/Src/main.c ****   
 131:Core/Src/main.c ****   count = 0;
 180              		.loc 1 131 9
 181 0030 0023     		movs	r3, #0
 182 0032 FB82     		strh	r3, [r7, #22]	@ movhi
 183              	.L17:
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   while (1)
 134:Core/Src/main.c ****   {
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****     if(button_release(GPIOA, BUTTON_PIN, GPIO_PIN_RESET)) {
 184              		.loc 1 136 8
 185 0034 0022     		movs	r2, #0
 186 0036 4FF40071 		mov	r1, #512
 187 003a 3048     		ldr	r0, .L20+4
 188 003c FFF7FEFF 		bl	button_release
 189 0040 0346     		mov	r3, r0
 190              		.loc 1 136 7 discriminator 1
 191 0042 002B     		cmp	r3, #0
 192 0044 F6D0     		beq	.L17
 137:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, TRIGGER_PIN, GPIO_PIN_SET);
 193              		.loc 1 137 7
 194 0046 0122     		movs	r2, #1
 195 0048 8021     		movs	r1, #128
 196 004a 2C48     		ldr	r0, .L20+4
 197 004c FFF7FEFF 		bl	HAL_GPIO_WritePin
 138:Core/Src/main.c ****       HAL_Delay(120);
 198              		.loc 1 138 7
 199 0050 7820     		movs	r0, #120
 200 0052 FFF7FEFF 		bl	HAL_Delay
 139:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, TRIGGER_PIN, GPIO_PIN_RESET);
 201              		.loc 1 139 7
 202 0056 0022     		movs	r2, #0
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 7


 203 0058 8021     		movs	r1, #128
 204 005a 2848     		ldr	r0, .L20+4
 205 005c FFF7FEFF 		bl	HAL_GPIO_WritePin
 140:Core/Src/main.c **** 
 141:Core/Src/main.c ****       count = read_distance();
 206              		.loc 1 141 15
 207 0060 FFF7FEFF 		bl	read_distance
 208 0064 0346     		mov	r3, r0
 209 0066 FB82     		strh	r3, [r7, #22]	@ movhi
 142:Core/Src/main.c ****       //count = 5000;
 143:Core/Src/main.c ****       distance = (double) (count / PULSE_RATIO); /* Velocidade do som = 340 km/h = 340 * 3.6 m/s */
 210              		.loc 1 143 18
 211 0068 FB8A     		ldrh	r3, [r7, #22]
 212 006a 1846     		mov	r0, r3
 213 006c FFF7FEFF 		bl	__aeabi_i2d
 214              		.loc 1 143 16
 215 0070 4FF00002 		mov	r2, #0
 216 0074 224B     		ldr	r3, .L20+8
 217 0076 FFF7FEFF 		bl	__aeabi_ddiv
 218 007a 0246     		mov	r2, r0
 219 007c 0B46     		mov	r3, r1
 220 007e C7E90223 		strd	r2, [r7, #8]
 144:Core/Src/main.c **** 
 145:Core/Src/main.c ****       if (distance < CLOSE_DISTANCE && distance) {
 221              		.loc 1 145 10
 222 0082 4FF00002 		mov	r2, #0
 223 0086 1F4B     		ldr	r3, .L20+12
 224 0088 D7E90201 		ldrd	r0, [r7, #8]
 225 008c FFF7FEFF 		bl	__aeabi_dcmplt
 226 0090 0346     		mov	r3, r0
 227 0092 002B     		cmp	r3, #0
 228 0094 1AD0     		beq	.L13
 229              		.loc 1 145 37 discriminator 1
 230 0096 4FF00002 		mov	r2, #0
 231 009a 4FF00003 		mov	r3, #0
 232 009e D7E90201 		ldrd	r0, [r7, #8]
 233 00a2 FFF7FEFF 		bl	__aeabi_dcmpeq
 234 00a6 0346     		mov	r3, r0
 235 00a8 002B     		cmp	r3, #0
 236 00aa 0FD1     		bne	.L13
 146:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_0_PIN, GPIO_PIN_SET);
 237              		.loc 1 146 9
 238 00ac 0122     		movs	r2, #1
 239 00ae 2021     		movs	r1, #32
 240 00b0 1548     		ldr	r0, .L20+16
 241 00b2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 147:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_1_PIN, GPIO_PIN_SET);
 242              		.loc 1 147 9
 243 00b6 0122     		movs	r2, #1
 244 00b8 4021     		movs	r1, #64
 245 00ba 1348     		ldr	r0, .L20+16
 246 00bc FFF7FEFF 		bl	HAL_GPIO_WritePin
 148:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_2_PIN, GPIO_PIN_RESET);
 247              		.loc 1 148 9
 248 00c0 0022     		movs	r2, #0
 249 00c2 8021     		movs	r1, #128
 250 00c4 1048     		ldr	r0, .L20+16
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 8


 251 00c6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 252 00ca 0EE0     		b	.L16
 253              	.L13:
 149:Core/Src/main.c ****       }
 150:Core/Src/main.c ****       else {
 151:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_0_PIN, GPIO_PIN_RESET);
 254              		.loc 1 151 9
 255 00cc 0022     		movs	r2, #0
 256 00ce 2021     		movs	r1, #32
 257 00d0 0D48     		ldr	r0, .L20+16
 258 00d2 FFF7FEFF 		bl	HAL_GPIO_WritePin
 152:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_1_PIN, GPIO_PIN_RESET);
 259              		.loc 1 152 9
 260 00d6 0022     		movs	r2, #0
 261 00d8 4021     		movs	r1, #64
 262 00da 0B48     		ldr	r0, .L20+16
 263 00dc FFF7FEFF 		bl	HAL_GPIO_WritePin
 153:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, LED_2_PIN, GPIO_PIN_SET);
 264              		.loc 1 153 9
 265 00e0 0122     		movs	r2, #1
 266 00e2 8021     		movs	r1, #128
 267 00e4 0848     		ldr	r0, .L20+16
 268 00e6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 269              	.L16:
 154:Core/Src/main.c ****       }
 155:Core/Src/main.c **** 
 156:Core/Src/main.c ****       distance = 0;
 270              		.loc 1 156 16
 271 00ea 4FF00002 		mov	r2, #0
 272 00ee 4FF00003 		mov	r3, #0
 273 00f2 C7E90223 		strd	r2, [r7, #8]
 136:Core/Src/main.c ****       HAL_GPIO_WritePin(GPIOA, TRIGGER_PIN, GPIO_PIN_SET);
 274              		.loc 1 136 7
 275 00f6 9DE7     		b	.L17
 276              	.L21:
 277              		.align	2
 278              	.L20:
 279 00f8 00000000 		.word	.LC0
 280 00fc 00000240 		.word	1073872896
 281 0100 00000440 		.word	1074003968
 282 0104 00005940 		.word	1079574528
 283 0108 00040240 		.word	1073873920
 284              		.cfi_endproc
 285              	.LFE131:
 287              		.section	.text.SystemClock_Config,"ax",%progbits
 288              		.align	1
 289              		.global	SystemClock_Config
 290              		.syntax unified
 291              		.thumb
 292              		.thumb_func
 294              	SystemClock_Config:
 295              	.LFB132:
 157:Core/Src/main.c **** 
 158:Core/Src/main.c **** 
 159:Core/Src/main.c ****     }
 160:Core/Src/main.c **** 
 161:Core/Src/main.c ****     else {
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 9


 162:Core/Src/main.c ****       
 163:Core/Src/main.c ****     };
 164:Core/Src/main.c **** 
 165:Core/Src/main.c ****     /* USER CODE END WHILE */
 166:Core/Src/main.c **** 
 167:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 168:Core/Src/main.c ****   }
 169:Core/Src/main.c ****   /* USER CODE END 3 */
 170:Core/Src/main.c **** }
 171:Core/Src/main.c **** 
 172:Core/Src/main.c **** /**
 173:Core/Src/main.c ****   * @brief System Clock Configuration
 174:Core/Src/main.c ****   * @retval None
 175:Core/Src/main.c ****   */
 176:Core/Src/main.c **** void SystemClock_Config(void)
 177:Core/Src/main.c **** {
 296              		.loc 1 177 1
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 80
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300 0000 80B5     		push	{r7, lr}
 301              	.LCFI8:
 302              		.cfi_def_cfa_offset 8
 303              		.cfi_offset 7, -8
 304              		.cfi_offset 14, -4
 305 0002 94B0     		sub	sp, sp, #80
 306              	.LCFI9:
 307              		.cfi_def_cfa_offset 88
 308 0004 00AF     		add	r7, sp, #0
 309              	.LCFI10:
 310              		.cfi_def_cfa_register 7
 178:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 311              		.loc 1 178 22
 312 0006 07F12003 		add	r3, r7, #32
 313 000a 3022     		movs	r2, #48
 314 000c 0021     		movs	r1, #0
 315 000e 1846     		mov	r0, r3
 316 0010 FFF7FEFF 		bl	memset
 179:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 317              		.loc 1 179 22
 318 0014 07F10C03 		add	r3, r7, #12
 319 0018 0022     		movs	r2, #0
 320 001a 1A60     		str	r2, [r3]
 321 001c 5A60     		str	r2, [r3, #4]
 322 001e 9A60     		str	r2, [r3, #8]
 323 0020 DA60     		str	r2, [r3, #12]
 324 0022 1A61     		str	r2, [r3, #16]
 325              	.LBB4:
 180:Core/Src/main.c **** 
 181:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 182:Core/Src/main.c ****   */
 183:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 326              		.loc 1 183 3
 327 0024 0023     		movs	r3, #0
 328 0026 BB60     		str	r3, [r7, #8]
 329 0028 274B     		ldr	r3, .L26
 330 002a 1B6C     		ldr	r3, [r3, #64]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 10


 331 002c 264A     		ldr	r2, .L26
 332 002e 43F08053 		orr	r3, r3, #268435456
 333 0032 1364     		str	r3, [r2, #64]
 334 0034 244B     		ldr	r3, .L26
 335 0036 1B6C     		ldr	r3, [r3, #64]
 336 0038 03F08053 		and	r3, r3, #268435456
 337 003c BB60     		str	r3, [r7, #8]
 338 003e BB68     		ldr	r3, [r7, #8]
 339              	.LBE4:
 340              	.LBB5:
 184:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 341              		.loc 1 184 3
 342 0040 0023     		movs	r3, #0
 343 0042 7B60     		str	r3, [r7, #4]
 344 0044 214B     		ldr	r3, .L26+4
 345 0046 1B68     		ldr	r3, [r3]
 346 0048 204A     		ldr	r2, .L26+4
 347 004a 43F44043 		orr	r3, r3, #49152
 348 004e 1360     		str	r3, [r2]
 349 0050 1E4B     		ldr	r3, .L26+4
 350 0052 1B68     		ldr	r3, [r3]
 351 0054 03F44043 		and	r3, r3, #49152
 352 0058 7B60     		str	r3, [r7, #4]
 353 005a 7B68     		ldr	r3, [r7, #4]
 354              	.LBE5:
 185:Core/Src/main.c **** 
 186:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 187:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 355              		.loc 1 189 36
 356 005c 0123     		movs	r3, #1
 357 005e 3B62     		str	r3, [r7, #32]
 190:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 358              		.loc 1 190 30
 359 0060 4FF48033 		mov	r3, #65536
 360 0064 7B62     		str	r3, [r7, #36]
 191:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 361              		.loc 1 191 34
 362 0066 0223     		movs	r3, #2
 363 0068 BB63     		str	r3, [r7, #56]
 192:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 364              		.loc 1 192 35
 365 006a 4FF48003 		mov	r3, #4194304
 366 006e FB63     		str	r3, [r7, #60]
 193:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 367              		.loc 1 193 30
 368 0070 1923     		movs	r3, #25
 369 0072 3B64     		str	r3, [r7, #64]
 194:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 370              		.loc 1 194 30
 371 0074 C023     		movs	r3, #192
 372 0076 7B64     		str	r3, [r7, #68]
 195:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 373              		.loc 1 195 30
 374 0078 0223     		movs	r3, #2
 375 007a BB64     		str	r3, [r7, #72]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 11


 196:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 376              		.loc 1 196 30
 377 007c 0423     		movs	r3, #4
 378 007e FB64     		str	r3, [r7, #76]
 197:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 379              		.loc 1 197 7
 380 0080 07F12003 		add	r3, r7, #32
 381 0084 1846     		mov	r0, r3
 382 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 383 008a 0346     		mov	r3, r0
 384              		.loc 1 197 6 discriminator 1
 385 008c 002B     		cmp	r3, #0
 386 008e 01D0     		beq	.L23
 198:Core/Src/main.c ****   {
 199:Core/Src/main.c ****     Error_Handler();
 387              		.loc 1 199 5
 388 0090 FFF7FEFF 		bl	Error_Handler
 389              	.L23:
 200:Core/Src/main.c ****   }
 201:Core/Src/main.c **** 
 202:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 203:Core/Src/main.c ****   */
 204:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 390              		.loc 1 204 31
 391 0094 0F23     		movs	r3, #15
 392 0096 FB60     		str	r3, [r7, #12]
 205:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 206:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 393              		.loc 1 206 34
 394 0098 0223     		movs	r3, #2
 395 009a 3B61     		str	r3, [r7, #16]
 207:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 396              		.loc 1 207 35
 397 009c 0023     		movs	r3, #0
 398 009e 7B61     		str	r3, [r7, #20]
 208:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 399              		.loc 1 208 36
 400 00a0 4FF48053 		mov	r3, #4096
 401 00a4 BB61     		str	r3, [r7, #24]
 209:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 402              		.loc 1 209 36
 403 00a6 0023     		movs	r3, #0
 404 00a8 FB61     		str	r3, [r7, #28]
 210:Core/Src/main.c **** 
 211:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 405              		.loc 1 211 7
 406 00aa 07F10C03 		add	r3, r7, #12
 407 00ae 0321     		movs	r1, #3
 408 00b0 1846     		mov	r0, r3
 409 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 410 00b6 0346     		mov	r3, r0
 411              		.loc 1 211 6 discriminator 1
 412 00b8 002B     		cmp	r3, #0
 413 00ba 01D0     		beq	.L25
 212:Core/Src/main.c ****   {
 213:Core/Src/main.c ****     Error_Handler();
 414              		.loc 1 213 5
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 12


 415 00bc FFF7FEFF 		bl	Error_Handler
 416              	.L25:
 214:Core/Src/main.c ****   }
 215:Core/Src/main.c **** }
 417              		.loc 1 215 1
 418 00c0 00BF     		nop
 419 00c2 5037     		adds	r7, r7, #80
 420              	.LCFI11:
 421              		.cfi_def_cfa_offset 8
 422 00c4 BD46     		mov	sp, r7
 423              	.LCFI12:
 424              		.cfi_def_cfa_register 13
 425              		@ sp needed
 426 00c6 80BD     		pop	{r7, pc}
 427              	.L27:
 428              		.align	2
 429              	.L26:
 430 00c8 00380240 		.word	1073887232
 431 00cc 00700040 		.word	1073770496
 432              		.cfi_endproc
 433              	.LFE132:
 435              		.section	.text.MX_GPIO_Init,"ax",%progbits
 436              		.align	1
 437              		.syntax unified
 438              		.thumb
 439              		.thumb_func
 441              	MX_GPIO_Init:
 442              	.LFB133:
 216:Core/Src/main.c **** 
 217:Core/Src/main.c **** /**
 218:Core/Src/main.c ****   * @brief GPIO Initialization Function
 219:Core/Src/main.c ****   * @param None
 220:Core/Src/main.c ****   * @retval None
 221:Core/Src/main.c ****   */
 222:Core/Src/main.c **** static void MX_GPIO_Init(void)
 223:Core/Src/main.c **** {
 443              		.loc 1 223 1
 444              		.cfi_startproc
 445              		@ args = 0, pretend = 0, frame = 120
 446              		@ frame_needed = 1, uses_anonymous_args = 0
 447 0000 80B5     		push	{r7, lr}
 448              	.LCFI13:
 449              		.cfi_def_cfa_offset 8
 450              		.cfi_offset 7, -8
 451              		.cfi_offset 14, -4
 452 0002 9EB0     		sub	sp, sp, #120
 453              	.LCFI14:
 454              		.cfi_def_cfa_offset 128
 455 0004 00AF     		add	r7, sp, #0
 456              	.LCFI15:
 457              		.cfi_def_cfa_register 7
 224:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 458              		.loc 1 224 20
 459 0006 07F16403 		add	r3, r7, #100
 460 000a 0022     		movs	r2, #0
 461 000c 1A60     		str	r2, [r3]
 462 000e 5A60     		str	r2, [r3, #4]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 13


 463 0010 9A60     		str	r2, [r3, #8]
 464 0012 DA60     		str	r2, [r3, #12]
 465 0014 1A61     		str	r2, [r3, #16]
 225:Core/Src/main.c **** 
 226:Core/Src/main.c ****   GPIO_InitTypeDef LED_InitStruct = {0};
 466              		.loc 1 226 20
 467 0016 07F15003 		add	r3, r7, #80
 468 001a 0022     		movs	r2, #0
 469 001c 1A60     		str	r2, [r3]
 470 001e 5A60     		str	r2, [r3, #4]
 471 0020 9A60     		str	r2, [r3, #8]
 472 0022 DA60     		str	r2, [r3, #12]
 473 0024 1A61     		str	r2, [r3, #16]
 474              	.LBB6:
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 229:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 475              		.loc 1 229 3
 476 0026 0023     		movs	r3, #0
 477 0028 3B61     		str	r3, [r7, #16]
 478 002a 564B     		ldr	r3, .L29
 479 002c 1B6B     		ldr	r3, [r3, #48]
 480 002e 554A     		ldr	r2, .L29
 481 0030 43F00403 		orr	r3, r3, #4
 482 0034 1363     		str	r3, [r2, #48]
 483 0036 534B     		ldr	r3, .L29
 484 0038 1B6B     		ldr	r3, [r3, #48]
 485 003a 03F00403 		and	r3, r3, #4
 486 003e 3B61     		str	r3, [r7, #16]
 487 0040 3B69     		ldr	r3, [r7, #16]
 488              	.LBE6:
 489              	.LBB7:
 230:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE(); /* Essa linha */
 490              		.loc 1 230 3
 491 0042 0023     		movs	r3, #0
 492 0044 FB60     		str	r3, [r7, #12]
 493 0046 4F4B     		ldr	r3, .L29
 494 0048 1B6B     		ldr	r3, [r3, #48]
 495 004a 4E4A     		ldr	r2, .L29
 496 004c 43F00203 		orr	r3, r3, #2
 497 0050 1363     		str	r3, [r2, #48]
 498 0052 4C4B     		ldr	r3, .L29
 499 0054 1B6B     		ldr	r3, [r3, #48]
 500 0056 03F00203 		and	r3, r3, #2
 501 005a FB60     		str	r3, [r7, #12]
 502 005c FB68     		ldr	r3, [r7, #12]
 503              	.LBE7:
 504              	.LBB8:
 231:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 505              		.loc 1 231 3
 506 005e 0023     		movs	r3, #0
 507 0060 BB60     		str	r3, [r7, #8]
 508 0062 484B     		ldr	r3, .L29
 509 0064 1B6B     		ldr	r3, [r3, #48]
 510 0066 474A     		ldr	r2, .L29
 511 0068 43F08003 		orr	r3, r3, #128
 512 006c 1363     		str	r3, [r2, #48]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 14


 513 006e 454B     		ldr	r3, .L29
 514 0070 1B6B     		ldr	r3, [r3, #48]
 515 0072 03F08003 		and	r3, r3, #128
 516 0076 BB60     		str	r3, [r7, #8]
 517 0078 BB68     		ldr	r3, [r7, #8]
 518              	.LBE8:
 519              	.LBB9:
 232:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 520              		.loc 1 232 3
 521 007a 0023     		movs	r3, #0
 522 007c 7B60     		str	r3, [r7, #4]
 523 007e 414B     		ldr	r3, .L29
 524 0080 1B6B     		ldr	r3, [r3, #48]
 525 0082 404A     		ldr	r2, .L29
 526 0084 43F00103 		orr	r3, r3, #1
 527 0088 1363     		str	r3, [r2, #48]
 528 008a 3E4B     		ldr	r3, .L29
 529 008c 1B6B     		ldr	r3, [r3, #48]
 530 008e 03F00103 		and	r3, r3, #1
 531 0092 7B60     		str	r3, [r7, #4]
 532 0094 7B68     		ldr	r3, [r7, #4]
 533              	.LBE9:
 233:Core/Src/main.c **** 
 234:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 235:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 534              		.loc 1 235 3
 535 0096 0022     		movs	r2, #0
 536 0098 4FF40051 		mov	r1, #8192
 537 009c 3A48     		ldr	r0, .L29+4
 538 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 236:Core/Src/main.c **** 
 237:Core/Src/main.c ****   /*HAL_GPIO_WritePin(LED_PIN_GPIO_Port, LED_0_PIN | LED_1_PIN | LED_2_PIN | LED_3_PIN | LED_4_PIN,
 238:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_All, GPIO_PIN_RESET);
 539              		.loc 1 238 3
 540 00a2 0022     		movs	r2, #0
 541 00a4 4FF6FF71 		movw	r1, #65535
 542 00a8 3848     		ldr	r0, .L29+8
 543 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 239:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOA, GPIO_PIN_All, GPIO_PIN_RESET);
 544              		.loc 1 239 3
 545 00ae 0022     		movs	r2, #0
 546 00b0 4FF6FF71 		movw	r1, #65535
 547 00b4 3648     		ldr	r0, .L29+12
 548 00b6 FFF7FEFF 		bl	HAL_GPIO_WritePin
 240:Core/Src/main.c ****   
 241:Core/Src/main.c ****   LED_InitStruct.Pin = LED_0_PIN | LED_1_PIN | LED_2_PIN;
 549              		.loc 1 241 22
 550 00ba E023     		movs	r3, #224
 551 00bc 3B65     		str	r3, [r7, #80]
 242:Core/Src/main.c ****   LED_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 552              		.loc 1 242 23
 553 00be 0123     		movs	r3, #1
 554 00c0 7B65     		str	r3, [r7, #84]
 243:Core/Src/main.c ****   LED_InitStruct.Pull = GPIO_NOPULL;
 555              		.loc 1 243 23
 556 00c2 0023     		movs	r3, #0
 557 00c4 BB65     		str	r3, [r7, #88]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 15


 244:Core/Src/main.c ****   LED_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 558              		.loc 1 244 24
 559 00c6 0023     		movs	r3, #0
 560 00c8 FB65     		str	r3, [r7, #92]
 245:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &LED_InitStruct);
 561              		.loc 1 245 3
 562 00ca 07F15003 		add	r3, r7, #80
 563 00ce 1946     		mov	r1, r3
 564 00d0 2E48     		ldr	r0, .L29+8
 565 00d2 FFF7FEFF 		bl	HAL_GPIO_Init
 246:Core/Src/main.c **** 
 247:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 248:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 566              		.loc 1 248 23
 567 00d6 4FF40053 		mov	r3, #8192
 568 00da 7B66     		str	r3, [r7, #100]
 249:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 569              		.loc 1 249 24
 570 00dc 0123     		movs	r3, #1
 571 00de BB66     		str	r3, [r7, #104]
 250:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 572              		.loc 1 250 24
 573 00e0 0023     		movs	r3, #0
 574 00e2 FB66     		str	r3, [r7, #108]
 251:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 575              		.loc 1 251 25
 576 00e4 0023     		movs	r3, #0
 577 00e6 3B67     		str	r3, [r7, #112]
 252:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 578              		.loc 1 252 3
 579 00e8 07F16403 		add	r3, r7, #100
 580 00ec 1946     		mov	r1, r3
 581 00ee 2648     		ldr	r0, .L29+4
 582 00f0 FFF7FEFF 		bl	HAL_GPIO_Init
 253:Core/Src/main.c **** 
 254:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_Button_Pin_Init_Struct = {0};
 583              		.loc 1 254 20
 584 00f4 07F13C03 		add	r3, r7, #60
 585 00f8 0022     		movs	r2, #0
 586 00fa 1A60     		str	r2, [r3]
 587 00fc 5A60     		str	r2, [r3, #4]
 588 00fe 9A60     		str	r2, [r3, #8]
 589 0100 DA60     		str	r2, [r3, #12]
 590 0102 1A61     		str	r2, [r3, #16]
 255:Core/Src/main.c **** 
 256:Core/Src/main.c ****   GPIO_Button_Pin_Init_Struct.Pin = BUTTON_PIN;
 591              		.loc 1 256 35
 592 0104 4FF40073 		mov	r3, #512
 593 0108 FB63     		str	r3, [r7, #60]
 257:Core/Src/main.c ****   GPIO_Button_Pin_Init_Struct.Mode = GPIO_MODE_INPUT;
 594              		.loc 1 257 36
 595 010a 0023     		movs	r3, #0
 596 010c 3B64     		str	r3, [r7, #64]
 258:Core/Src/main.c ****   GPIO_Button_Pin_Init_Struct.Pull = GPIO_NOPULL;
 597              		.loc 1 258 36
 598 010e 0023     		movs	r3, #0
 599 0110 7B64     		str	r3, [r7, #68]
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 16


 259:Core/Src/main.c ****   GPIO_Button_Pin_Init_Struct.Speed = GPIO_SPEED_FREQ_LOW;
 600              		.loc 1 259 37
 601 0112 0023     		movs	r3, #0
 602 0114 BB64     		str	r3, [r7, #72]
 260:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_Button_Pin_Init_Struct);
 603              		.loc 1 260 3
 604 0116 07F13C03 		add	r3, r7, #60
 605 011a 1946     		mov	r1, r3
 606 011c 1C48     		ldr	r0, .L29+12
 607 011e FFF7FEFF 		bl	HAL_GPIO_Init
 261:Core/Src/main.c **** 
 262:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_Trigger_Pin_Init_Struct = {0};
 608              		.loc 1 262 20
 609 0122 07F12803 		add	r3, r7, #40
 610 0126 0022     		movs	r2, #0
 611 0128 1A60     		str	r2, [r3]
 612 012a 5A60     		str	r2, [r3, #4]
 613 012c 9A60     		str	r2, [r3, #8]
 614 012e DA60     		str	r2, [r3, #12]
 615 0130 1A61     		str	r2, [r3, #16]
 263:Core/Src/main.c **** 
 264:Core/Src/main.c ****   GPIO_Trigger_Pin_Init_Struct.Pin = TRIGGER_PIN;
 616              		.loc 1 264 36
 617 0132 8023     		movs	r3, #128
 618 0134 BB62     		str	r3, [r7, #40]
 265:Core/Src/main.c ****   GPIO_Trigger_Pin_Init_Struct.Mode = GPIO_MODE_OUTPUT_PP;
 619              		.loc 1 265 37
 620 0136 0123     		movs	r3, #1
 621 0138 FB62     		str	r3, [r7, #44]
 266:Core/Src/main.c ****   GPIO_Trigger_Pin_Init_Struct.Pull = GPIO_NOPULL;
 622              		.loc 1 266 37
 623 013a 0023     		movs	r3, #0
 624 013c 3B63     		str	r3, [r7, #48]
 267:Core/Src/main.c ****   GPIO_Trigger_Pin_Init_Struct.Speed = GPIO_SPEED_FREQ_LOW;
 625              		.loc 1 267 38
 626 013e 0023     		movs	r3, #0
 627 0140 7B63     		str	r3, [r7, #52]
 268:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_Trigger_Pin_Init_Struct);
 628              		.loc 1 268 3
 629 0142 07F12803 		add	r3, r7, #40
 630 0146 1946     		mov	r1, r3
 631 0148 1148     		ldr	r0, .L29+12
 632 014a FFF7FEFF 		bl	HAL_GPIO_Init
 269:Core/Src/main.c **** 
 270:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_Echo_Pin_Init_Struct = {0};
 633              		.loc 1 270 20
 634 014e 07F11403 		add	r3, r7, #20
 635 0152 0022     		movs	r2, #0
 636 0154 1A60     		str	r2, [r3]
 637 0156 5A60     		str	r2, [r3, #4]
 638 0158 9A60     		str	r2, [r3, #8]
 639 015a DA60     		str	r2, [r3, #12]
 640 015c 1A61     		str	r2, [r3, #16]
 271:Core/Src/main.c **** 
 272:Core/Src/main.c ****   GPIO_Echo_Pin_Init_Struct.Pin = ECHO_PIN;
 641              		.loc 1 272 33
 642 015e 4023     		movs	r3, #64
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 17


 643 0160 7B61     		str	r3, [r7, #20]
 273:Core/Src/main.c ****   GPIO_Echo_Pin_Init_Struct.Mode = GPIO_MODE_INPUT;
 644              		.loc 1 273 34
 645 0162 0023     		movs	r3, #0
 646 0164 BB61     		str	r3, [r7, #24]
 274:Core/Src/main.c ****   GPIO_Echo_Pin_Init_Struct.Pull = GPIO_NOPULL;
 647              		.loc 1 274 34
 648 0166 0023     		movs	r3, #0
 649 0168 FB61     		str	r3, [r7, #28]
 275:Core/Src/main.c ****   GPIO_Echo_Pin_Init_Struct.Speed = GPIO_SPEED_FREQ_LOW;
 650              		.loc 1 275 35
 651 016a 0023     		movs	r3, #0
 652 016c 3B62     		str	r3, [r7, #32]
 276:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_Echo_Pin_Init_Struct);
 653              		.loc 1 276 3
 654 016e 07F11403 		add	r3, r7, #20
 655 0172 1946     		mov	r1, r3
 656 0174 0648     		ldr	r0, .L29+12
 657 0176 FFF7FEFF 		bl	HAL_GPIO_Init
 277:Core/Src/main.c **** 
 278:Core/Src/main.c **** }
 658              		.loc 1 278 1
 659 017a 00BF     		nop
 660 017c 7837     		adds	r7, r7, #120
 661              	.LCFI16:
 662              		.cfi_def_cfa_offset 8
 663 017e BD46     		mov	sp, r7
 664              	.LCFI17:
 665              		.cfi_def_cfa_register 13
 666              		@ sp needed
 667 0180 80BD     		pop	{r7, pc}
 668              	.L30:
 669 0182 00BF     		.align	2
 670              	.L29:
 671 0184 00380240 		.word	1073887232
 672 0188 00080240 		.word	1073874944
 673 018c 00040240 		.word	1073873920
 674 0190 00000240 		.word	1073872896
 675              		.cfi_endproc
 676              	.LFE133:
 678              		.section	.text.Error_Handler,"ax",%progbits
 679              		.align	1
 680              		.global	Error_Handler
 681              		.syntax unified
 682              		.thumb
 683              		.thumb_func
 685              	Error_Handler:
 686              	.LFB134:
 279:Core/Src/main.c **** 
 280:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 281:Core/Src/main.c **** 
 282:Core/Src/main.c **** /* USER CODE END 4 */
 283:Core/Src/main.c **** 
 284:Core/Src/main.c **** /**
 285:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 286:Core/Src/main.c ****   * @retval None
 287:Core/Src/main.c ****   */
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 18


 288:Core/Src/main.c **** void Error_Handler(void)
 289:Core/Src/main.c **** {
 687              		.loc 1 289 1
 688              		.cfi_startproc
 689              		@ args = 0, pretend = 0, frame = 0
 690              		@ frame_needed = 1, uses_anonymous_args = 0
 691              		@ link register save eliminated.
 692 0000 80B4     		push	{r7}
 693              	.LCFI18:
 694              		.cfi_def_cfa_offset 4
 695              		.cfi_offset 7, -4
 696 0002 00AF     		add	r7, sp, #0
 697              	.LCFI19:
 698              		.cfi_def_cfa_register 7
 699              	.LBB10:
 700              	.LBB11:
 701              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 19


  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 20


  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 702              		.loc 2 142 3
 703              		.syntax unified
 704              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 705 0004 72B6     		cpsid i
 706              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 707              		.loc 2 143 1
 708              		.thumb
 709              		.syntax unified
 710 0006 00BF     		nop
 711              	.L32:
 712              	.LBE11:
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 21


 713              	.LBE10:
 290:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 291:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 292:Core/Src/main.c ****   __disable_irq();
 293:Core/Src/main.c ****   while (1)
 714              		.loc 1 293 9
 715 0008 00BF     		nop
 716 000a FDE7     		b	.L32
 717              		.cfi_endproc
 718              	.LFE134:
 720              		.text
 721              	.Letext0:
 722              		.file 3 "C:/tools/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include/m
 723              		.file 4 "C:/tools/arm-gnu-toolchain-13.2.rel1-mingw-w64-i686-arm-none-eabi/arm-none-eabi/include/s
 724              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 725              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 726              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 727              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 728              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 729              		.file 10 "Core/Inc/button.h"
 730              		.file 11 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
ARM GAS  C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s 			page 22


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:21     .text.read_distance:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:27     .text.read_distance:00000000 read_distance
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:122    .text.read_distance:00000070 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:131    .rodata:00000000 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:137    .text.main:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:143    .text.main:00000000 main
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:294    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:441    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:279    .text.main:000000f8 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:288    .text.SystemClock_Config:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:685    .text.Error_Handler:00000000 Error_Handler
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:430    .text.SystemClock_Config:000000c8 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:436    .text.MX_GPIO_Init:00000000 $t
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:671    .text.MX_GPIO_Init:00000184 $d
C:\Users\DAELT-~1\AppData\Local\Temp\ccw9qaUx.s:679    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_GPIO_WritePin
HAL_Delay
button
__aeabi_i2d
__aeabi_ddiv
__aeabi_dcmplt
__aeabi_dcmpeq
HAL_Init
button_release
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_Init
