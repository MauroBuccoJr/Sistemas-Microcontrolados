ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.rodata
  20              		.align	2
  21              	.LC0:
  22 0000 2000     		.short	32
  23 0002 4000     		.short	64
  24 0004 8000     		.short	128
  25 0006 0001     		.short	256
  26 0008 0002     		.short	512
  27              		.section	.text.main,"ax",%progbits
  28              		.align	1
  29              		.global	main
  30              		.syntax unified
  31              		.thumb
  32              		.thumb_func
  34              	main:
  35              	.LFB130:
  36              		.file 1 "Core/Src/main.c"
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2022 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** #include "button.h"
  22:Core/Src/main.c **** 
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 2


  23:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  24:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  25:Core/Src/main.c **** 
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** 
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** /* USER CODE END PD */
  36:Core/Src/main.c **** 
  37:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  38:Core/Src/main.c **** /* USER CODE BEGIN PM */
  39:Core/Src/main.c **** 
  40:Core/Src/main.c **** /* USER CODE END PM */
  41:Core/Src/main.c **** 
  42:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  43:Core/Src/main.c **** 
  44:Core/Src/main.c **** /* USER CODE BEGIN PV */
  45:Core/Src/main.c **** 
  46:Core/Src/main.c **** /* USER CODE END PV */
  47:Core/Src/main.c **** 
  48:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  49:Core/Src/main.c **** void SystemClock_Config(void);
  50:Core/Src/main.c **** static void MX_GPIO_Init(void);
  51:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  52:Core/Src/main.c **** 
  53:Core/Src/main.c **** /* USER CODE END PFP */
  54:Core/Src/main.c **** 
  55:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  56:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  57:Core/Src/main.c **** 
  58:Core/Src/main.c **** /* USER CODE END 0 */
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** /**
  61:Core/Src/main.c ****   * @brief  The application entry point.
  62:Core/Src/main.c ****   * @retval int
  63:Core/Src/main.c ****   */
  64:Core/Src/main.c **** int main(void)
  65:Core/Src/main.c **** {
  37              		.loc 1 65 1
  38              		.cfi_startproc
  39              		@ args = 0, pretend = 0, frame = 24
  40              		@ frame_needed = 1, uses_anonymous_args = 0
  41 0000 80B5     		push	{r7, lr}
  42              	.LCFI0:
  43              		.cfi_def_cfa_offset 8
  44              		.cfi_offset 7, -8
  45              		.cfi_offset 14, -4
  46 0002 86B0     		sub	sp, sp, #24
  47              	.LCFI1:
  48              		.cfi_def_cfa_offset 32
  49 0004 00AF     		add	r7, sp, #0
  50              	.LCFI2:
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 3


  51              		.cfi_def_cfa_register 7
  66:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
  67:Core/Src/main.c **** 
  68:Core/Src/main.c ****   uint8_t count, led_kit_counter = 0;
  52              		.loc 1 68 18
  53 0006 0023     		movs	r3, #0
  54 0008 BB75     		strb	r3, [r7, #22]
  69:Core/Src/main.c **** 
  70:Core/Src/main.c ****   uint32_t i;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c ****   uint16_t led_pins[] = {LED_0_PIN, LED_1_PIN, LED_2_PIN, LED_3_PIN, LED_4_PIN};
  55              		.loc 1 72 12
  56 000a 344A     		ldr	r2, .L9
  57 000c 3B1D     		adds	r3, r7, #4
  58 000e 07CA     		ldm	r2, {r0, r1, r2}
  59 0010 03C3     		stmia	r3!, {r0, r1}
  60 0012 1A80     		strh	r2, [r3]	@ movhi
  73:Core/Src/main.c ****   /* USER CODE END 1 */
  74:Core/Src/main.c **** 
  75:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
  76:Core/Src/main.c **** 
  77:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  78:Core/Src/main.c ****   HAL_Init();
  61              		.loc 1 78 3
  62 0014 FFF7FEFF 		bl	HAL_Init
  79:Core/Src/main.c **** 
  80:Core/Src/main.c ****   /* USER CODE BEGIN Init */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c ****   /* USER CODE END Init */
  83:Core/Src/main.c **** 
  84:Core/Src/main.c ****   /* Configure the system clock */
  85:Core/Src/main.c ****   SystemClock_Config();
  63              		.loc 1 85 3
  64 0018 FFF7FEFF 		bl	SystemClock_Config
  86:Core/Src/main.c **** 
  87:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
  88:Core/Src/main.c **** 
  89:Core/Src/main.c ****   /* USER CODE END SysInit */
  90:Core/Src/main.c **** 
  91:Core/Src/main.c ****   /* Initialize all configured peripherals */
  92:Core/Src/main.c ****   MX_GPIO_Init();
  65              		.loc 1 92 3
  66 001c FFF7FEFF 		bl	MX_GPIO_Init
  93:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
  94:Core/Src/main.c **** 
  95:Core/Src/main.c ****   /* USER CODE END 2 */
  96:Core/Src/main.c **** 
  97:Core/Src/main.c ****   /* Infinite loop */
  98:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
  99:Core/Src/main.c ****   
 100:Core/Src/main.c ****   count = 0;
  67              		.loc 1 100 9
  68 0020 0023     		movs	r3, #0
  69 0022 FB75     		strb	r3, [r7, #23]
  70              	.L8:
 101:Core/Src/main.c ****   
 102:Core/Src/main.c ****   while (1)
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 4


 103:Core/Src/main.c ****   {
 104:Core/Src/main.c **** 
 105:Core/Src/main.c ****     if(button_release(GPIOA, GPIO_PIN_9, 0)) {
  71              		.loc 1 105 8
  72 0024 0022     		movs	r2, #0
  73 0026 4FF40071 		mov	r1, #512
  74 002a 2D48     		ldr	r0, .L9+4
  75 002c FFF7FEFF 		bl	button_release
  76 0030 0346     		mov	r3, r0
  77              		.loc 1 105 7
  78 0032 002B     		cmp	r3, #0
  79 0034 0BD0     		beq	.L2
 106:Core/Src/main.c ****       count += 1;
  80              		.loc 1 106 13
  81 0036 FB7D     		ldrb	r3, [r7, #23]
  82 0038 0133     		adds	r3, r3, #1
  83 003a FB75     		strb	r3, [r7, #23]
 107:Core/Src/main.c ****       if ((count >> 5) & 1) {
  84              		.loc 1 107 24
  85 003c FB7D     		ldrb	r3, [r7, #23]	@ zero_extendqisi2
  86 003e 5B09     		lsrs	r3, r3, #5
  87 0040 DBB2     		uxtb	r3, r3
  88 0042 03F00103 		and	r3, r3, #1
  89              		.loc 1 107 10
  90 0046 002B     		cmp	r3, #0
  91 0048 01D0     		beq	.L2
 108:Core/Src/main.c ****         count = 0;
  92              		.loc 1 108 15
  93 004a 0023     		movs	r3, #0
  94 004c FB75     		strb	r3, [r7, #23]
  95              	.L2:
 109:Core/Src/main.c ****       }
 110:Core/Src/main.c ****     }  
 111:Core/Src/main.c **** 
 112:Core/Src/main.c ****     for (i=0;i<5;i++) {
  96              		.loc 1 112 11
  97 004e 0023     		movs	r3, #0
  98 0050 3B61     		str	r3, [r7, #16]
  99              		.loc 1 112 5
 100 0052 24E0     		b	.L3
 101              	.L6:
 113:Core/Src/main.c ****       if ((count >> i) & 1) {
 102              		.loc 1 113 18
 103 0054 FA7D     		ldrb	r2, [r7, #23]	@ zero_extendqisi2
 104 0056 3B69     		ldr	r3, [r7, #16]
 105 0058 42FA03F3 		asr	r3, r2, r3
 106              		.loc 1 113 24
 107 005c 03F00103 		and	r3, r3, #1
 108              		.loc 1 113 10
 109 0060 002B     		cmp	r3, #0
 110 0062 0BD0     		beq	.L4
 114:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, led_pins[i], GPIO_PIN_SET);
 111              		.loc 1 114 9
 112 0064 3B69     		ldr	r3, [r7, #16]
 113 0066 5B00     		lsls	r3, r3, #1
 114 0068 1833     		adds	r3, r3, #24
 115 006a 3B44     		add	r3, r3, r7
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 5


 116 006c 33F8143C 		ldrh	r3, [r3, #-20]
 117 0070 0122     		movs	r2, #1
 118 0072 1946     		mov	r1, r3
 119 0074 1B48     		ldr	r0, .L9+8
 120 0076 FFF7FEFF 		bl	HAL_GPIO_WritePin
 121 007a 0AE0     		b	.L5
 122              	.L4:
 115:Core/Src/main.c ****       }
 116:Core/Src/main.c ****       else {
 117:Core/Src/main.c ****         HAL_GPIO_WritePin(GPIOB, led_pins[i], GPIO_PIN_RESET);
 123              		.loc 1 117 9
 124 007c 3B69     		ldr	r3, [r7, #16]
 125 007e 5B00     		lsls	r3, r3, #1
 126 0080 1833     		adds	r3, r3, #24
 127 0082 3B44     		add	r3, r3, r7
 128 0084 33F8143C 		ldrh	r3, [r3, #-20]
 129 0088 0022     		movs	r2, #0
 130 008a 1946     		mov	r1, r3
 131 008c 1548     		ldr	r0, .L9+8
 132 008e FFF7FEFF 		bl	HAL_GPIO_WritePin
 133              	.L5:
 118:Core/Src/main.c ****       }
 119:Core/Src/main.c ****       HAL_Delay(1);
 134              		.loc 1 119 7 discriminator 2
 135 0092 0120     		movs	r0, #1
 136 0094 FFF7FEFF 		bl	HAL_Delay
 112:Core/Src/main.c ****       if ((count >> i) & 1) {
 137              		.loc 1 112 19 discriminator 2
 138 0098 3B69     		ldr	r3, [r7, #16]
 139 009a 0133     		adds	r3, r3, #1
 140 009c 3B61     		str	r3, [r7, #16]
 141              	.L3:
 112:Core/Src/main.c ****       if ((count >> i) & 1) {
 142              		.loc 1 112 15 discriminator 1
 143 009e 3B69     		ldr	r3, [r7, #16]
 144 00a0 042B     		cmp	r3, #4
 145 00a2 D7D9     		bls	.L6
 120:Core/Src/main.c ****     };
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****     led_kit_counter += 10;
 146              		.loc 1 122 21
 147 00a4 BB7D     		ldrb	r3, [r7, #22]
 148 00a6 0A33     		adds	r3, r3, #10
 149 00a8 BB75     		strb	r3, [r7, #22]
 123:Core/Src/main.c ****     
 124:Core/Src/main.c ****     if (led_kit_counter >= 205) {
 150              		.loc 1 124 8
 151 00aa BB7D     		ldrb	r3, [r7, #22]	@ zero_extendqisi2
 152 00ac CC2B     		cmp	r3, #204
 153 00ae B9D9     		bls	.L8
 125:Core/Src/main.c ****       HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 154              		.loc 1 125 7
 155 00b0 0022     		movs	r2, #0
 156 00b2 4FF40051 		mov	r1, #8192
 157 00b6 0C48     		ldr	r0, .L9+12
 158 00b8 FFF7FEFF 		bl	HAL_GPIO_WritePin
 126:Core/Src/main.c ****       HAL_Delay(10);
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 6


 159              		.loc 1 126 7
 160 00bc 0A20     		movs	r0, #10
 161 00be FFF7FEFF 		bl	HAL_Delay
 127:Core/Src/main.c ****       HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_SET);
 162              		.loc 1 127 7
 163 00c2 0122     		movs	r2, #1
 164 00c4 4FF40051 		mov	r1, #8192
 165 00c8 0748     		ldr	r0, .L9+12
 166 00ca FFF7FEFF 		bl	HAL_GPIO_WritePin
 128:Core/Src/main.c ****       HAL_Delay(1);
 167              		.loc 1 128 7
 168 00ce 0120     		movs	r0, #1
 169 00d0 FFF7FEFF 		bl	HAL_Delay
 129:Core/Src/main.c ****       led_kit_counter = 0;
 170              		.loc 1 129 23
 171 00d4 0023     		movs	r3, #0
 172 00d6 BB75     		strb	r3, [r7, #22]
 105:Core/Src/main.c ****       count += 1;
 173              		.loc 1 105 7
 174 00d8 A4E7     		b	.L8
 175              	.L10:
 176 00da 00BF     		.align	2
 177              	.L9:
 178 00dc 00000000 		.word	.LC0
 179 00e0 00000240 		.word	1073872896
 180 00e4 00040240 		.word	1073873920
 181 00e8 00080240 		.word	1073874944
 182              		.cfi_endproc
 183              	.LFE130:
 185              		.section	.text.SystemClock_Config,"ax",%progbits
 186              		.align	1
 187              		.global	SystemClock_Config
 188              		.syntax unified
 189              		.thumb
 190              		.thumb_func
 192              	SystemClock_Config:
 193              	.LFB131:
 130:Core/Src/main.c ****     }
 131:Core/Src/main.c **** 
 132:Core/Src/main.c ****     /* USER CODE END WHILE */
 133:Core/Src/main.c **** 
 134:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 135:Core/Src/main.c ****   }
 136:Core/Src/main.c ****   /* USER CODE END 3 */
 137:Core/Src/main.c **** }
 138:Core/Src/main.c **** 
 139:Core/Src/main.c **** /**
 140:Core/Src/main.c ****   * @brief System Clock Configuration
 141:Core/Src/main.c ****   * @retval None
 142:Core/Src/main.c ****   */
 143:Core/Src/main.c **** void SystemClock_Config(void)
 144:Core/Src/main.c **** {
 194              		.loc 1 144 1
 195              		.cfi_startproc
 196              		@ args = 0, pretend = 0, frame = 80
 197              		@ frame_needed = 1, uses_anonymous_args = 0
 198 0000 80B5     		push	{r7, lr}
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 7


 199              	.LCFI3:
 200              		.cfi_def_cfa_offset 8
 201              		.cfi_offset 7, -8
 202              		.cfi_offset 14, -4
 203 0002 94B0     		sub	sp, sp, #80
 204              	.LCFI4:
 205              		.cfi_def_cfa_offset 88
 206 0004 00AF     		add	r7, sp, #0
 207              	.LCFI5:
 208              		.cfi_def_cfa_register 7
 145:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 209              		.loc 1 145 22
 210 0006 07F12003 		add	r3, r7, #32
 211 000a 3022     		movs	r2, #48
 212 000c 0021     		movs	r1, #0
 213 000e 1846     		mov	r0, r3
 214 0010 FFF7FEFF 		bl	memset
 146:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 215              		.loc 1 146 22
 216 0014 07F10C03 		add	r3, r7, #12
 217 0018 0022     		movs	r2, #0
 218 001a 1A60     		str	r2, [r3]
 219 001c 5A60     		str	r2, [r3, #4]
 220 001e 9A60     		str	r2, [r3, #8]
 221 0020 DA60     		str	r2, [r3, #12]
 222 0022 1A61     		str	r2, [r3, #16]
 223              	.LBB4:
 147:Core/Src/main.c **** 
 148:Core/Src/main.c ****   /** Configure the main internal regulator output voltage
 149:Core/Src/main.c ****   */
 150:Core/Src/main.c ****   __HAL_RCC_PWR_CLK_ENABLE();
 224              		.loc 1 150 3
 225 0024 0023     		movs	r3, #0
 226 0026 BB60     		str	r3, [r7, #8]
 227 0028 274B     		ldr	r3, .L15
 228 002a 1B6C     		ldr	r3, [r3, #64]
 229 002c 264A     		ldr	r2, .L15
 230 002e 43F08053 		orr	r3, r3, #268435456
 231 0032 1364     		str	r3, [r2, #64]
 232 0034 244B     		ldr	r3, .L15
 233 0036 1B6C     		ldr	r3, [r3, #64]
 234 0038 03F08053 		and	r3, r3, #268435456
 235 003c BB60     		str	r3, [r7, #8]
 236 003e BB68     		ldr	r3, [r7, #8]
 237              	.LBE4:
 238              	.LBB5:
 151:Core/Src/main.c ****   __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE1);
 239              		.loc 1 151 3
 240 0040 0023     		movs	r3, #0
 241 0042 7B60     		str	r3, [r7, #4]
 242 0044 214B     		ldr	r3, .L15+4
 243 0046 1B68     		ldr	r3, [r3]
 244 0048 204A     		ldr	r2, .L15+4
 245 004a 43F44043 		orr	r3, r3, #49152
 246 004e 1360     		str	r3, [r2]
 247 0050 1E4B     		ldr	r3, .L15+4
 248 0052 1B68     		ldr	r3, [r3]
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 8


 249 0054 03F44043 		and	r3, r3, #49152
 250 0058 7B60     		str	r3, [r7, #4]
 251 005a 7B68     		ldr	r3, [r7, #4]
 252              	.LBE5:
 152:Core/Src/main.c **** 
 153:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 154:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 155:Core/Src/main.c ****   */
 156:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSE;
 253              		.loc 1 156 36
 254 005c 0123     		movs	r3, #1
 255 005e 3B62     		str	r3, [r7, #32]
 157:Core/Src/main.c ****   RCC_OscInitStruct.HSEState = RCC_HSE_ON;
 256              		.loc 1 157 30
 257 0060 4FF48033 		mov	r3, #65536
 258 0064 7B62     		str	r3, [r7, #36]
 158:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 259              		.loc 1 158 34
 260 0066 0223     		movs	r3, #2
 261 0068 BB63     		str	r3, [r7, #56]
 159:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSE;
 262              		.loc 1 159 35
 263 006a 4FF48003 		mov	r3, #4194304
 264 006e FB63     		str	r3, [r7, #60]
 160:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLM = 25;
 265              		.loc 1 160 30
 266 0070 1923     		movs	r3, #25
 267 0072 3B64     		str	r3, [r7, #64]
 161:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLN = 192;
 268              		.loc 1 161 30
 269 0074 C023     		movs	r3, #192
 270 0076 7B64     		str	r3, [r7, #68]
 162:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 271              		.loc 1 162 30
 272 0078 0223     		movs	r3, #2
 273 007a BB64     		str	r3, [r7, #72]
 163:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLQ = 4;
 274              		.loc 1 163 30
 275 007c 0423     		movs	r3, #4
 276 007e FB64     		str	r3, [r7, #76]
 164:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 277              		.loc 1 164 7
 278 0080 07F12003 		add	r3, r7, #32
 279 0084 1846     		mov	r0, r3
 280 0086 FFF7FEFF 		bl	HAL_RCC_OscConfig
 281 008a 0346     		mov	r3, r0
 282              		.loc 1 164 6
 283 008c 002B     		cmp	r3, #0
 284 008e 01D0     		beq	.L12
 165:Core/Src/main.c ****   {
 166:Core/Src/main.c ****     Error_Handler();
 285              		.loc 1 166 5
 286 0090 FFF7FEFF 		bl	Error_Handler
 287              	.L12:
 167:Core/Src/main.c ****   }
 168:Core/Src/main.c **** 
 169:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 9


 170:Core/Src/main.c ****   */
 171:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 288              		.loc 1 171 31
 289 0094 0F23     		movs	r3, #15
 290 0096 FB60     		str	r3, [r7, #12]
 172:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
 173:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 291              		.loc 1 173 34
 292 0098 0223     		movs	r3, #2
 293 009a 3B61     		str	r3, [r7, #16]
 174:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 294              		.loc 1 174 35
 295 009c 0023     		movs	r3, #0
 296 009e 7B61     		str	r3, [r7, #20]
 175:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 297              		.loc 1 175 36
 298 00a0 4FF48053 		mov	r3, #4096
 299 00a4 BB61     		str	r3, [r7, #24]
 176:Core/Src/main.c ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 300              		.loc 1 176 36
 301 00a6 0023     		movs	r3, #0
 302 00a8 FB61     		str	r3, [r7, #28]
 177:Core/Src/main.c **** 
 178:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_3) != HAL_OK)
 303              		.loc 1 178 7
 304 00aa 07F10C03 		add	r3, r7, #12
 305 00ae 0321     		movs	r1, #3
 306 00b0 1846     		mov	r0, r3
 307 00b2 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 308 00b6 0346     		mov	r3, r0
 309              		.loc 1 178 6
 310 00b8 002B     		cmp	r3, #0
 311 00ba 01D0     		beq	.L14
 179:Core/Src/main.c ****   {
 180:Core/Src/main.c ****     Error_Handler();
 312              		.loc 1 180 5
 313 00bc FFF7FEFF 		bl	Error_Handler
 314              	.L14:
 181:Core/Src/main.c ****   }
 182:Core/Src/main.c **** }
 315              		.loc 1 182 1
 316 00c0 00BF     		nop
 317 00c2 5037     		adds	r7, r7, #80
 318              	.LCFI6:
 319              		.cfi_def_cfa_offset 8
 320 00c4 BD46     		mov	sp, r7
 321              	.LCFI7:
 322              		.cfi_def_cfa_register 13
 323              		@ sp needed
 324 00c6 80BD     		pop	{r7, pc}
 325              	.L16:
 326              		.align	2
 327              	.L15:
 328 00c8 00380240 		.word	1073887232
 329 00cc 00700040 		.word	1073770496
 330              		.cfi_endproc
 331              	.LFE131:
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 10


 333              		.section	.text.MX_GPIO_Init,"ax",%progbits
 334              		.align	1
 335              		.syntax unified
 336              		.thumb
 337              		.thumb_func
 339              	MX_GPIO_Init:
 340              	.LFB132:
 183:Core/Src/main.c **** 
 184:Core/Src/main.c **** /**
 185:Core/Src/main.c ****   * @brief GPIO Initialization Function
 186:Core/Src/main.c ****   * @param None
 187:Core/Src/main.c ****   * @retval None
 188:Core/Src/main.c ****   */
 189:Core/Src/main.c **** static void MX_GPIO_Init(void)
 190:Core/Src/main.c **** {
 341              		.loc 1 190 1
 342              		.cfi_startproc
 343              		@ args = 0, pretend = 0, frame = 80
 344              		@ frame_needed = 1, uses_anonymous_args = 0
 345 0000 80B5     		push	{r7, lr}
 346              	.LCFI8:
 347              		.cfi_def_cfa_offset 8
 348              		.cfi_offset 7, -8
 349              		.cfi_offset 14, -4
 350 0002 94B0     		sub	sp, sp, #80
 351              	.LCFI9:
 352              		.cfi_def_cfa_offset 88
 353 0004 00AF     		add	r7, sp, #0
 354              	.LCFI10:
 355              		.cfi_def_cfa_register 7
 191:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
 356              		.loc 1 191 20
 357 0006 07F13C03 		add	r3, r7, #60
 358 000a 0022     		movs	r2, #0
 359 000c 1A60     		str	r2, [r3]
 360 000e 5A60     		str	r2, [r3, #4]
 361 0010 9A60     		str	r2, [r3, #8]
 362 0012 DA60     		str	r2, [r3, #12]
 363 0014 1A61     		str	r2, [r3, #16]
 192:Core/Src/main.c **** 
 193:Core/Src/main.c ****   GPIO_InitTypeDef LED_InitStruct = {0};
 364              		.loc 1 193 20
 365 0016 07F12803 		add	r3, r7, #40
 366 001a 0022     		movs	r2, #0
 367 001c 1A60     		str	r2, [r3]
 368 001e 5A60     		str	r2, [r3, #4]
 369 0020 9A60     		str	r2, [r3, #8]
 370 0022 DA60     		str	r2, [r3, #12]
 371 0024 1A61     		str	r2, [r3, #16]
 372              	.LBB6:
 194:Core/Src/main.c **** 
 195:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 196:Core/Src/main.c ****   __HAL_RCC_GPIOC_CLK_ENABLE();
 373              		.loc 1 196 3
 374 0026 0023     		movs	r3, #0
 375 0028 3B61     		str	r3, [r7, #16]
 376 002a 3D4B     		ldr	r3, .L18
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 11


 377 002c 1B6B     		ldr	r3, [r3, #48]
 378 002e 3C4A     		ldr	r2, .L18
 379 0030 43F00403 		orr	r3, r3, #4
 380 0034 1363     		str	r3, [r2, #48]
 381 0036 3A4B     		ldr	r3, .L18
 382 0038 1B6B     		ldr	r3, [r3, #48]
 383 003a 03F00403 		and	r3, r3, #4
 384 003e 3B61     		str	r3, [r7, #16]
 385 0040 3B69     		ldr	r3, [r7, #16]
 386              	.LBE6:
 387              	.LBB7:
 197:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE(); /* Essa linha */
 388              		.loc 1 197 3
 389 0042 0023     		movs	r3, #0
 390 0044 FB60     		str	r3, [r7, #12]
 391 0046 364B     		ldr	r3, .L18
 392 0048 1B6B     		ldr	r3, [r3, #48]
 393 004a 354A     		ldr	r2, .L18
 394 004c 43F00203 		orr	r3, r3, #2
 395 0050 1363     		str	r3, [r2, #48]
 396 0052 334B     		ldr	r3, .L18
 397 0054 1B6B     		ldr	r3, [r3, #48]
 398 0056 03F00203 		and	r3, r3, #2
 399 005a FB60     		str	r3, [r7, #12]
 400 005c FB68     		ldr	r3, [r7, #12]
 401              	.LBE7:
 402              	.LBB8:
 198:Core/Src/main.c ****   __HAL_RCC_GPIOH_CLK_ENABLE();
 403              		.loc 1 198 3
 404 005e 0023     		movs	r3, #0
 405 0060 BB60     		str	r3, [r7, #8]
 406 0062 2F4B     		ldr	r3, .L18
 407 0064 1B6B     		ldr	r3, [r3, #48]
 408 0066 2E4A     		ldr	r2, .L18
 409 0068 43F08003 		orr	r3, r3, #128
 410 006c 1363     		str	r3, [r2, #48]
 411 006e 2C4B     		ldr	r3, .L18
 412 0070 1B6B     		ldr	r3, [r3, #48]
 413 0072 03F08003 		and	r3, r3, #128
 414 0076 BB60     		str	r3, [r7, #8]
 415 0078 BB68     		ldr	r3, [r7, #8]
 416              	.LBE8:
 417              	.LBB9:
 199:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 418              		.loc 1 199 3
 419 007a 0023     		movs	r3, #0
 420 007c 7B60     		str	r3, [r7, #4]
 421 007e 284B     		ldr	r3, .L18
 422 0080 1B6B     		ldr	r3, [r3, #48]
 423 0082 274A     		ldr	r2, .L18
 424 0084 43F00103 		orr	r3, r3, #1
 425 0088 1363     		str	r3, [r2, #48]
 426 008a 254B     		ldr	r3, .L18
 427 008c 1B6B     		ldr	r3, [r3, #48]
 428 008e 03F00103 		and	r3, r3, #1
 429 0092 7B60     		str	r3, [r7, #4]
 430 0094 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 12


 431              	.LBE9:
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 202:Core/Src/main.c ****   HAL_GPIO_WritePin(KIT_LED_GPIO_Port, KIT_LED_Pin, GPIO_PIN_RESET);
 432              		.loc 1 202 3
 433 0096 0022     		movs	r2, #0
 434 0098 4FF40051 		mov	r1, #8192
 435 009c 2148     		ldr	r0, .L18+4
 436 009e FFF7FEFF 		bl	HAL_GPIO_WritePin
 203:Core/Src/main.c **** 
 204:Core/Src/main.c ****   /*HAL_GPIO_WritePin(LED_PIN_GPIO_Port, LED_0_PIN | LED_1_PIN | LED_2_PIN | LED_3_PIN | LED_4_PIN,
 205:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_All, GPIO_PIN_RESET);
 437              		.loc 1 205 3
 438 00a2 0022     		movs	r2, #0
 439 00a4 4FF6FF71 		movw	r1, #65535
 440 00a8 1F48     		ldr	r0, .L18+8
 441 00aa FFF7FEFF 		bl	HAL_GPIO_WritePin
 206:Core/Src/main.c ****   
 207:Core/Src/main.c ****   LED_InitStruct.Pin = LED_0_PIN | LED_1_PIN | LED_2_PIN | LED_3_PIN | LED_4_PIN;
 442              		.loc 1 207 22
 443 00ae 4FF47873 		mov	r3, #992
 444 00b2 BB62     		str	r3, [r7, #40]
 208:Core/Src/main.c ****   LED_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 445              		.loc 1 208 23
 446 00b4 0123     		movs	r3, #1
 447 00b6 FB62     		str	r3, [r7, #44]
 209:Core/Src/main.c ****   LED_InitStruct.Pull = GPIO_NOPULL;
 448              		.loc 1 209 23
 449 00b8 0023     		movs	r3, #0
 450 00ba 3B63     		str	r3, [r7, #48]
 210:Core/Src/main.c ****   LED_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 451              		.loc 1 210 24
 452 00bc 0023     		movs	r3, #0
 453 00be 7B63     		str	r3, [r7, #52]
 211:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &LED_InitStruct);
 454              		.loc 1 211 3
 455 00c0 07F12803 		add	r3, r7, #40
 456 00c4 1946     		mov	r1, r3
 457 00c6 1848     		ldr	r0, .L18+8
 458 00c8 FFF7FEFF 		bl	HAL_GPIO_Init
 212:Core/Src/main.c **** 
 213:Core/Src/main.c **** 
 214:Core/Src/main.c ****   /*Configure GPIO pin : KIT_LED_Pin */
 215:Core/Src/main.c ****   GPIO_InitStruct.Pin = KIT_LED_Pin;
 459              		.loc 1 215 23
 460 00cc 4FF40053 		mov	r3, #8192
 461 00d0 FB63     		str	r3, [r7, #60]
 216:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 462              		.loc 1 216 24
 463 00d2 0123     		movs	r3, #1
 464 00d4 3B64     		str	r3, [r7, #64]
 217:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
 465              		.loc 1 217 24
 466 00d6 0023     		movs	r3, #0
 467 00d8 7B64     		str	r3, [r7, #68]
 218:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 468              		.loc 1 218 25
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 13


 469 00da 0023     		movs	r3, #0
 470 00dc BB64     		str	r3, [r7, #72]
 219:Core/Src/main.c ****   HAL_GPIO_Init(KIT_LED_GPIO_Port, &GPIO_InitStruct);
 471              		.loc 1 219 3
 472 00de 07F13C03 		add	r3, r7, #60
 473 00e2 1946     		mov	r1, r3
 474 00e4 0F48     		ldr	r0, .L18+4
 475 00e6 FFF7FEFF 		bl	HAL_GPIO_Init
 220:Core/Src/main.c **** 
 221:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_PIN_Init_Struct = {0};
 476              		.loc 1 221 20
 477 00ea 07F11403 		add	r3, r7, #20
 478 00ee 0022     		movs	r2, #0
 479 00f0 1A60     		str	r2, [r3]
 480 00f2 5A60     		str	r2, [r3, #4]
 481 00f4 9A60     		str	r2, [r3, #8]
 482 00f6 DA60     		str	r2, [r3, #12]
 483 00f8 1A61     		str	r2, [r3, #16]
 222:Core/Src/main.c **** 
 223:Core/Src/main.c ****   GPIO_PIN_Init_Struct.Pin = GPIO_PIN_9;
 484              		.loc 1 223 28
 485 00fa 4FF40073 		mov	r3, #512
 486 00fe 7B61     		str	r3, [r7, #20]
 224:Core/Src/main.c ****   GPIO_PIN_Init_Struct.Mode = GPIO_MODE_INPUT;
 487              		.loc 1 224 29
 488 0100 0023     		movs	r3, #0
 489 0102 BB61     		str	r3, [r7, #24]
 225:Core/Src/main.c ****   GPIO_PIN_Init_Struct.Pull = GPIO_NOPULL;
 490              		.loc 1 225 29
 491 0104 0023     		movs	r3, #0
 492 0106 FB61     		str	r3, [r7, #28]
 226:Core/Src/main.c ****   GPIO_PIN_Init_Struct.Speed = GPIO_SPEED_FREQ_LOW;
 493              		.loc 1 226 30
 494 0108 0023     		movs	r3, #0
 495 010a 3B62     		str	r3, [r7, #32]
 227:Core/Src/main.c ****   HAL_GPIO_Init(GPIOA, &GPIO_PIN_Init_Struct);
 496              		.loc 1 227 3
 497 010c 07F11403 		add	r3, r7, #20
 498 0110 1946     		mov	r1, r3
 499 0112 0648     		ldr	r0, .L18+12
 500 0114 FFF7FEFF 		bl	HAL_GPIO_Init
 228:Core/Src/main.c **** 
 229:Core/Src/main.c **** }
 501              		.loc 1 229 1
 502 0118 00BF     		nop
 503 011a 5037     		adds	r7, r7, #80
 504              	.LCFI11:
 505              		.cfi_def_cfa_offset 8
 506 011c BD46     		mov	sp, r7
 507              	.LCFI12:
 508              		.cfi_def_cfa_register 13
 509              		@ sp needed
 510 011e 80BD     		pop	{r7, pc}
 511              	.L19:
 512              		.align	2
 513              	.L18:
 514 0120 00380240 		.word	1073887232
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 14


 515 0124 00080240 		.word	1073874944
 516 0128 00040240 		.word	1073873920
 517 012c 00000240 		.word	1073872896
 518              		.cfi_endproc
 519              	.LFE132:
 521              		.section	.text.Error_Handler,"ax",%progbits
 522              		.align	1
 523              		.global	Error_Handler
 524              		.syntax unified
 525              		.thumb
 526              		.thumb_func
 528              	Error_Handler:
 529              	.LFB133:
 230:Core/Src/main.c **** 
 231:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 232:Core/Src/main.c **** 
 233:Core/Src/main.c **** /* USER CODE END 4 */
 234:Core/Src/main.c **** 
 235:Core/Src/main.c **** /**
 236:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 237:Core/Src/main.c ****   * @retval None
 238:Core/Src/main.c ****   */
 239:Core/Src/main.c **** void Error_Handler(void)
 240:Core/Src/main.c **** {
 530              		.loc 1 240 1
 531              		.cfi_startproc
 532              		@ args = 0, pretend = 0, frame = 0
 533              		@ frame_needed = 1, uses_anonymous_args = 0
 534              		@ link register save eliminated.
 535 0000 80B4     		push	{r7}
 536              	.LCFI13:
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 0002 00AF     		add	r7, sp, #0
 540              	.LCFI14:
 541              		.cfi_def_cfa_register 7
 542              	.LBB10:
 543              	.LBB11:
 544              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 15


  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 16


  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 17


 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 545              		.loc 2 142 3
 546              		.syntax unified
 547              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 548 0004 72B6     		cpsid i
 549              	@ 0 "" 2
 143:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 550              		.loc 2 143 1
 551              		.thumb
 552              		.syntax unified
 553 0006 00BF     		nop
 554              	.L21:
 555              	.LBE11:
 556              	.LBE10:
 241:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 242:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 243:Core/Src/main.c ****   __disable_irq();
 244:Core/Src/main.c ****   while (1)
 557              		.loc 1 244 9 discriminator 1
 558 0008 FEE7     		b	.L21
 559              		.cfi_endproc
 560              	.LFE133:
 562              		.text
 563              	.Letext0:
 564              		.file 3 "c:\\arm-gcc\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-ea
 565              		.file 4 "c:\\arm-gcc\\tools\\arm-gnu-toolchain-11.3.rel1-mingw-w64-i686-arm-none-eabi\\arm-none-ea
 566              		.file 5 "Drivers/CMSIS/Device/ST/STM32F4xx/Include/stm32f411xe.h"
 567              		.file 6 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_def.h"
 568              		.file 7 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc_ex.h"
 569              		.file 8 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_rcc.h"
 570              		.file 9 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal_gpio.h"
 571              		.file 10 "Drivers/STM32F4xx_HAL_Driver/Inc/stm32f4xx_hal.h"
 572              		.file 11 "Core/Inc/button.h"
ARM GAS  C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s 			page 18


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:20     .rodata:00000000 $d
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:28     .text.main:00000000 $t
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:34     .text.main:00000000 main
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:192    .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:339    .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:178    .text.main:000000dc $d
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:186    .text.SystemClock_Config:00000000 $t
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:528    .text.Error_Handler:00000000 Error_Handler
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:328    .text.SystemClock_Config:000000c8 $d
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:334    .text.MX_GPIO_Init:00000000 $t
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:514    .text.MX_GPIO_Init:00000120 $d
C:\Users\mauro\AppData\Local\Temp\ccjdg6ed.s:522    .text.Error_Handler:00000000 $t

UNDEFINED SYMBOLS
HAL_Init
button_release
HAL_GPIO_WritePin
HAL_Delay
memset
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_GPIO_Init
